 A proposition about a complex stands in an internal relation to a proposition about a constituent of the complex. A complex can be given only by its description, which will be right or wrong. A proposition that mentions a complex will not be nonsensical, if the complex does not exits, but simply false. When a propositional element signifies a complex, this can be seen from an indeterminateness in the propositions in which it occurs. In such cases we know that the proposition leaves something undetermined. (In fact the notation for generality contains a prototype.) The contraction of a symbol for a complex into a simple symbol can be expressed in a definition.
------CorefChainz
CHAIN16-["this" in sentence 4, "it" in sentence 4]
representative mention: "this" in sentence 4
CHAIN18-["a complex" in sentence 1, "the complex" in sentence 1, "A complex" in sentence 2, "its" in sentence 2, "a complex" in sentence 3, "the complex" in sentence 3, "a complex" in sentence 4]
representative mention: "a complex" in sentence 1
CHAIN21-["A proposition about a complex" in sentence 1, "the proposition" in sentence 5]
representative mention: "A proposition about a complex" in sentence 1
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
root(ROOT-0, given-5)
det(complex-2, A-1)
aux(given-5, can-3)
auxpass(given-5, be-4)
punct(given-5, .-17)
case(description-9, by-7)
punct(description-9, ,-10)
aux(right-14, will-12)
cc(right-14, or-15)
cop(right-14, be-13)
nsubjpass(given-5, complex-2)
advmod(description-9, only-6)
nmod:poss(description-9, its-8)
nmod:agent(given-5, description-9)
nsubj(right-14, description-9)
nsubj(wrong-16, description-9)
ref(description-9, which-11)
acl:relcl(description-9, right-14)
acl:relcl(description-9, wrong-16)
conj:or(right-14, wrong-16)
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
root(ROOT-0, given-5)
det(complex-2, A-1)
aux(given-5, can-3)
auxpass(given-5, be-4)
punct(given-5, .-17)
case(description-9, by-7)
punct(description-9, ,-10)
aux(right-14, will-12)
cc(right-14, or-15)
cop(right-14, be-13)
nsubjpass(given-5, complex-2)
advmod(description-9, only-6)
nmod:poss(description-9, its-8)
nmod:agent(given-5, description-9)
nsubj(right-14, description-9)
nsubj(wrong-16, description-9)
ref(description-9, which-11)
acl:relcl(description-9, right-14)
acl:relcl(description-9, wrong-16)
conj:or(right-14, wrong-16)
root(ROOT-0, nonsensical-10)
det(proposition-2, A-1)
det(complex-6, a-5)
aux(nonsensical-10, will-7)
cop(nonsensical-10, be-9)
punct(nonsensical-10, .-22)
punct(nonsensical-10, ,-11)
det(complex-14, the-13)
aux(exits-17, does-15)
cc(exits-17, but-19)
mark(exits-17, if-12)
punct(exits-17, ,-18)
nsubj(mentions-4, proposition-2)
nsubj(nonsensical-10, proposition-2)
ref(proposition-2, that-3)
acl:relcl(proposition-2, mentions-4)
dobj(mentions-4, complex-6)
neg(nonsensical-10, not-8)
nsubj(exits-17, complex-14)
nsubj(false-21, complex-14)
neg(exits-17, not-16)
advcl:if(nonsensical-10, exits-17)
advmod(false-21, simply-20)
advcl:if(nonsensical-10, false-21)
conj:but(exits-17, false-21)
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
root(ROOT-0, given-5)
det(complex-2, A-1)
aux(given-5, can-3)
auxpass(given-5, be-4)
punct(given-5, .-17)
case(description-9, by-7)
punct(description-9, ,-10)
aux(right-14, will-12)
cc(right-14, or-15)
cop(right-14, be-13)
nsubjpass(given-5, complex-2)
advmod(description-9, only-6)
nmod:poss(description-9, its-8)
nmod:agent(given-5, description-9)
nsubj(right-14, description-9)
nsubj(wrong-16, description-9)
ref(description-9, which-11)
acl:relcl(description-9, right-14)
acl:relcl(description-9, wrong-16)
conj:or(right-14, wrong-16)
root(ROOT-0, nonsensical-10)
det(proposition-2, A-1)
det(complex-6, a-5)
aux(nonsensical-10, will-7)
cop(nonsensical-10, be-9)
punct(nonsensical-10, .-22)
punct(nonsensical-10, ,-11)
det(complex-14, the-13)
aux(exits-17, does-15)
cc(exits-17, but-19)
mark(exits-17, if-12)
punct(exits-17, ,-18)
nsubj(mentions-4, proposition-2)
nsubj(nonsensical-10, proposition-2)
ref(proposition-2, that-3)
acl:relcl(proposition-2, mentions-4)
dobj(mentions-4, complex-6)
neg(nonsensical-10, not-8)
nsubj(exits-17, complex-14)
nsubj(false-21, complex-14)
neg(exits-17, not-16)
advcl:if(nonsensical-10, exits-17)
advmod(false-21, simply-20)
advcl:if(nonsensical-10, false-21)
conj:but(exits-17, false-21)
root(ROOT-0, seen-12)
det(element-4, a-2)
det(complex-7, a-6)
aux(seen-12, can-10)
auxpass(seen-12, be-11)
punct(seen-12, .-23)
punct(seen-12, ,-8)
case(indeterminateness-15, from-13)
det(indeterminateness-15, an-14)
case(propositions-18, in-16)
det(propositions-18, the-17)
case(which-20, in-19)
advmod(signifies-5, When-1)
amod(element-4, propositional-3)
nsubj(signifies-5, element-4)
advcl(seen-12, signifies-5)
dobj(signifies-5, complex-7)
nsubjpass(seen-12, this-9)
nmod:from(seen-12, indeterminateness-15)
nmod:in(indeterminateness-15, propositions-18)
nmod:in(occurs-22, propositions-18)
ref(propositions-18, which-20)
nsubj(occurs-22, it-21)
acl:relcl(propositions-18, occurs-22)
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
root(ROOT-0, given-5)
det(complex-2, A-1)
aux(given-5, can-3)
auxpass(given-5, be-4)
punct(given-5, .-17)
case(description-9, by-7)
punct(description-9, ,-10)
aux(right-14, will-12)
cc(right-14, or-15)
cop(right-14, be-13)
nsubjpass(given-5, complex-2)
advmod(description-9, only-6)
nmod:poss(description-9, its-8)
nmod:agent(given-5, description-9)
nsubj(right-14, description-9)
nsubj(wrong-16, description-9)
ref(description-9, which-11)
acl:relcl(description-9, right-14)
acl:relcl(description-9, wrong-16)
conj:or(right-14, wrong-16)
root(ROOT-0, nonsensical-10)
det(proposition-2, A-1)
det(complex-6, a-5)
aux(nonsensical-10, will-7)
cop(nonsensical-10, be-9)
punct(nonsensical-10, .-22)
punct(nonsensical-10, ,-11)
det(complex-14, the-13)
aux(exits-17, does-15)
cc(exits-17, but-19)
mark(exits-17, if-12)
punct(exits-17, ,-18)
nsubj(mentions-4, proposition-2)
nsubj(nonsensical-10, proposition-2)
ref(proposition-2, that-3)
acl:relcl(proposition-2, mentions-4)
dobj(mentions-4, complex-6)
neg(nonsensical-10, not-8)
nsubj(exits-17, complex-14)
nsubj(false-21, complex-14)
neg(exits-17, not-16)
advcl:if(nonsensical-10, exits-17)
advmod(false-21, simply-20)
advcl:if(nonsensical-10, false-21)
conj:but(exits-17, false-21)
root(ROOT-0, seen-12)
det(element-4, a-2)
det(complex-7, a-6)
aux(seen-12, can-10)
auxpass(seen-12, be-11)
punct(seen-12, .-23)
punct(seen-12, ,-8)
case(indeterminateness-15, from-13)
det(indeterminateness-15, an-14)
case(propositions-18, in-16)
det(propositions-18, the-17)
case(which-20, in-19)
advmod(signifies-5, When-1)
amod(element-4, propositional-3)
nsubj(signifies-5, element-4)
advcl(seen-12, signifies-5)
dobj(signifies-5, complex-7)
nsubjpass(seen-12, this-9)
nmod:from(seen-12, indeterminateness-15)
nmod:in(indeterminateness-15, propositions-18)
nmod:in(occurs-22, propositions-18)
ref(propositions-18, which-20)
nsubj(occurs-22, it-21)
acl:relcl(propositions-18, occurs-22)
root(ROOT-0, know-5)
case(cases-3, In-1)
punct(know-5, .-12)
det(proposition-8, the-7)
mark(leaves-9, that-6)
amod(cases-3, such-2)
nmod:in(know-5, cases-3)
nsubj(know-5, we-4)
nsubj(leaves-9, proposition-8)
ccomp(know-5, leaves-9)
dobj(leaves-9, something-10)
amod(something-10, undetermined-11)
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
root(ROOT-0, given-5)
det(complex-2, A-1)
aux(given-5, can-3)
auxpass(given-5, be-4)
punct(given-5, .-17)
case(description-9, by-7)
punct(description-9, ,-10)
aux(right-14, will-12)
cc(right-14, or-15)
cop(right-14, be-13)
nsubjpass(given-5, complex-2)
advmod(description-9, only-6)
nmod:poss(description-9, its-8)
nmod:agent(given-5, description-9)
nsubj(right-14, description-9)
nsubj(wrong-16, description-9)
ref(description-9, which-11)
acl:relcl(description-9, right-14)
acl:relcl(description-9, wrong-16)
conj:or(right-14, wrong-16)
root(ROOT-0, nonsensical-10)
det(proposition-2, A-1)
det(complex-6, a-5)
aux(nonsensical-10, will-7)
cop(nonsensical-10, be-9)
punct(nonsensical-10, .-22)
punct(nonsensical-10, ,-11)
det(complex-14, the-13)
aux(exits-17, does-15)
cc(exits-17, but-19)
mark(exits-17, if-12)
punct(exits-17, ,-18)
nsubj(mentions-4, proposition-2)
nsubj(nonsensical-10, proposition-2)
ref(proposition-2, that-3)
acl:relcl(proposition-2, mentions-4)
dobj(mentions-4, complex-6)
neg(nonsensical-10, not-8)
nsubj(exits-17, complex-14)
nsubj(false-21, complex-14)
neg(exits-17, not-16)
advcl:if(nonsensical-10, exits-17)
advmod(false-21, simply-20)
advcl:if(nonsensical-10, false-21)
conj:but(exits-17, false-21)
root(ROOT-0, seen-12)
det(element-4, a-2)
det(complex-7, a-6)
aux(seen-12, can-10)
auxpass(seen-12, be-11)
punct(seen-12, .-23)
punct(seen-12, ,-8)
case(indeterminateness-15, from-13)
det(indeterminateness-15, an-14)
case(propositions-18, in-16)
det(propositions-18, the-17)
case(which-20, in-19)
advmod(signifies-5, When-1)
amod(element-4, propositional-3)
nsubj(signifies-5, element-4)
advcl(seen-12, signifies-5)
dobj(signifies-5, complex-7)
nsubjpass(seen-12, this-9)
nmod:from(seen-12, indeterminateness-15)
nmod:in(indeterminateness-15, propositions-18)
nmod:in(occurs-22, propositions-18)
ref(propositions-18, which-20)
nsubj(occurs-22, it-21)
acl:relcl(propositions-18, occurs-22)
root(ROOT-0, know-5)
case(cases-3, In-1)
punct(know-5, .-12)
det(proposition-8, the-7)
mark(leaves-9, that-6)
amod(cases-3, such-2)
nmod:in(know-5, cases-3)
nsubj(know-5, we-4)
nsubj(leaves-9, proposition-8)
ccomp(know-5, leaves-9)
dobj(leaves-9, something-10)
amod(something-10, undetermined-11)
root(ROOT-0, contains-8)
case(fact-3, In-2)
det(notation-5, the-4)
punct(notation-5, -LRB--1)
case(generality-7, for-6)
punct(contains-8, .-11)
punct(contains-8, -RRB--12)
det(prototype-10, a-9)
nmod:in(notation-5, fact-3)
nsubj(contains-8, notation-5)
nmod:for(notation-5, generality-7)
dobj(contains-8, prototype-10)
---
qqroot(ROOT-0, stands-6)
det(proposition-2, A-1)
case(complex-5, about-3)
det(complex-5, a-4)
punct(stands-6, .-20)
case(relation-10, in-7)
det(relation-10, an-8)
case(proposition-13, to-11)
det(proposition-13, a-12)
case(constituent-16, about-14)
det(constituent-16, a-15)
case(complex-19, of-17)
det(complex-19, the-18)
nsubj(stands-6, proposition-2)
nmod:about(proposition-2, complex-5)
amod(relation-10, internal-9)
nmod:in(stands-6, relation-10)
nmod:to(relation-10, proposition-13)
nmod:about(proposition-13, constituent-16)
nmod:of(constituent-16, complex-19)
root(ROOT-0, given-5)
det(complex-2, A-1)
aux(given-5, can-3)
auxpass(given-5, be-4)
punct(given-5, .-17)
case(description-9, by-7)
punct(description-9, ,-10)
aux(right-14, will-12)
cc(right-14, or-15)
cop(right-14, be-13)
nsubjpass(given-5, complex-2)
advmod(description-9, only-6)
nmod:poss(description-9, its-8)
nmod:agent(given-5, description-9)
nsubj(right-14, description-9)
nsubj(wrong-16, description-9)
ref(description-9, which-11)
acl:relcl(description-9, right-14)
acl:relcl(description-9, wrong-16)
conj:or(right-14, wrong-16)
root(ROOT-0, nonsensical-10)
det(proposition-2, A-1)
det(complex-6, a-5)
aux(nonsensical-10, will-7)
cop(nonsensical-10, be-9)
punct(nonsensical-10, .-22)
punct(nonsensical-10, ,-11)
det(complex-14, the-13)
aux(exits-17, does-15)
cc(exits-17, but-19)
mark(exits-17, if-12)
punct(exits-17, ,-18)
nsubj(mentions-4, proposition-2)
nsubj(nonsensical-10, proposition-2)
ref(proposition-2, that-3)
acl:relcl(proposition-2, mentions-4)
dobj(mentions-4, complex-6)
neg(nonsensical-10, not-8)
nsubj(exits-17, complex-14)
nsubj(false-21, complex-14)
neg(exits-17, not-16)
advcl:if(nonsensical-10, exits-17)
advmod(false-21, simply-20)
advcl:if(nonsensical-10, false-21)
conj:but(exits-17, false-21)
root(ROOT-0, seen-12)
det(element-4, a-2)
det(complex-7, a-6)
aux(seen-12, can-10)
auxpass(seen-12, be-11)
punct(seen-12, .-23)
punct(seen-12, ,-8)
case(indeterminateness-15, from-13)
det(indeterminateness-15, an-14)
case(propositions-18, in-16)
det(propositions-18, the-17)
case(which-20, in-19)
advmod(signifies-5, When-1)
amod(element-4, propositional-3)
nsubj(signifies-5, element-4)
advcl(seen-12, signifies-5)
dobj(signifies-5, complex-7)
nsubjpass(seen-12, this-9)
nmod:from(seen-12, indeterminateness-15)
nmod:in(indeterminateness-15, propositions-18)
nmod:in(occurs-22, propositions-18)
ref(propositions-18, which-20)
nsubj(occurs-22, it-21)
acl:relcl(propositions-18, occurs-22)
root(ROOT-0, know-5)
case(cases-3, In-1)
punct(know-5, .-12)
det(proposition-8, the-7)
mark(leaves-9, that-6)
amod(cases-3, such-2)
nmod:in(know-5, cases-3)
nsubj(know-5, we-4)
nsubj(leaves-9, proposition-8)
ccomp(know-5, leaves-9)
dobj(leaves-9, something-10)
amod(something-10, undetermined-11)
root(ROOT-0, contains-8)
case(fact-3, In-2)
det(notation-5, the-4)
punct(notation-5, -LRB--1)
case(generality-7, for-6)
punct(contains-8, .-11)
punct(contains-8, -RRB--12)
det(prototype-10, a-9)
nmod:in(notation-5, fact-3)
nsubj(contains-8, notation-5)
nmod:for(notation-5, generality-7)
dobj(contains-8, prototype-10)
root(ROOT-0, expressed-15)
det(contraction-2, The-1)
case(symbol-5, of-3)
det(symbol-5, a-4)
case(complex-8, for-6)
det(complex-8, a-7)
case(symbol-12, into-9)
det(symbol-12, a-10)
aux(expressed-15, can-13)
auxpass(expressed-15, be-14)
punct(expressed-15, .-19)
case(definition-18, in-16)
det(definition-18, a-17)
nsubjpass(expressed-15, contraction-2)
nmod:of(contraction-2, symbol-5)
nmod:for(symbol-5, complex-8)
amod(symbol-12, simple-11)
nmod:into(complex-8, symbol-12)
nmod:in(expressed-15, definition-18)
G[81, 87] [?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13, ?14, ?15, ?16, ?17, ?18, ?19, ?20, ?21, ?22, When1, cases3, complex2147483647, complex2147483647, complex2147483647, complex2147483647, complex2147483647, complex2147483647, complex2147483647, constituent2147483647, contains8, contraction2147483647, definition2147483647, description9, element2147483647, exits17, expressed15, fact3, false21, generality7, given5, indeterminateness2147483647, internal9, it21, its8, know5, leaves9, mentions4, nonsensical10, not8, not16, notation2147483647, occurs22, only6, proposition2147483647, proposition2147483647, proposition2147483647, proposition2147483647, propositional3, propositions2147483647, prototype2147483647, relation2147483647, right14, seen12, signifies5, simple11, simply20, something10, stands6, such2, symbol2147483647, symbol2147483647, that3, this9, undetermined11, we4, which11, which20, wrong16]
?7-in->?11
?19-a->proposition2147483647
cases3-in->know5
wrong16-relcl->description9
signifies5- ->seen12
?13-a->complex2147483647
?14-the->complex2147483647
?18- ->signifies5
occurs22-relcl->?7
?10-a->complex2147483647
?3-about->?4
?18-a->element2147483647
we4- ->know5
?10- ->signifies5
?16- ->mentions4
?1-the->complex2147483647
propositional3- ->?18
only6-  : by  : by ->description9
?17-in : can  : be ->expressed15
?14- ->false21
it21- ->leaves9
?2-The->contraction2147483647
?4-A->proposition2147483647
?17-a->definition2147483647
this9-  : can  : be ->seen12
?22-the->notation2147483647
When1- ->signifies5
?16-A->proposition2147483647
?15-a->symbol2147483647
which20-  : in ->?7
?13- ->mentions4
?5- ->?2
simply20- ->false21
right14-relcl : will  : will ->description9
?7-in->occurs22
?4- ->stands6
?16- ->nonsensical10
leaves9-  : that ->know5
mentions4-relcl->?16
?15-of->?2
wrong16-or : be ->right14
false21-if->nonsensical10
?12-a->symbol2147483647
?19-to->?21
its8-poss->description9
?7-the->propositions2147483647
?22- ->contains8
generality7-for->?22
?2- ->expressed15
?5-for->?15
which11- ->description9
?1-of->?6
?14-  : does  : does ->exits17
?2- ->?3
?8-  : can  : be ->given5
?20-a->prototype2147483647
?6-a->constituent2147483647
not16- ->exits17
?8-A->complex2147483647
description9- ->right14
?9- ->leaves9
?21-an->relation2147483647
that3- ->?16
fact3-in : In ->?22
not8-  : will  : be ->nonsensical10
description9-agent->given5
it21- ->occurs22
?5-a->complex2147483647
description9- ->wrong16
?5- ->?3
internal9- ->?21
simple11- ->?12
?3-a->complex2147483647
false21-but->exits17
undetermined11- ->something10
?6-about->?19
?9-the->proposition2147483647
?11-from->seen12
?11-an->indeterminateness2147483647
?21-in->stands6
something10- ->leaves9
?20- ->contains8
?12-into->?5
?1- ->?3
such2-  : In ->cases3
right14- ->?3
exits17-if->nonsensical10
------CorefChainz
CHAIN16-["this" in sentence 4, "it" in sentence 4]
representative mention: "this" in sentence 4
CHAIN18-["a complex" in sentence 1, "the complex" in sentence 1, "A complex" in sentence 2, "its" in sentence 2, "a complex" in sentence 3, "the complex" in sentence 3, "a complex" in sentence 4]
representative mention: "a complex" in sentence 1
CHAIN21-["A proposition about a complex" in sentence 1, "the proposition" in sentence 5]
representative mention: "A proposition about a complex" in sentence 1
