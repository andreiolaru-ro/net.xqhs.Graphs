 When a bracketed expression has propositions as its terms--and the order of the terms inside the brackets is indifferent--then I indicate it by a sign of the form '(E)'. '(E)' is a variable whose values are terms of the bracketed expression and the bar over the variable indicates that it is the representative of ali its values in the brackets. (E.g. if E has the three values P,Q, R, then (E) = (P, Q, R). ) What the values of the variable are is something that is stipulated. The stipulation is a description of the propositions that have the variable as their representative. How the description of the terms of the bracketed expression is produced is not essential. We can distinguish three kinds of description: 1.Direct enumeration, in which case we can simply substitute for the variable the constants that are its values; 2. giving a function fx whose values for all values of x are the propositions to be described; 3. giving a formal law that governs the construction of the propositions, in which case the bracketed expression has as its members all the terms of a series of forms.
------CorefChainz
CHAIN33-["E" in sentence 2, "E" in sentence 3]
representative mention: "E" in sentence 2
CHAIN65-["a bracketed expression" in sentence 1, "its" in sentence 1, "the bracketed expression" in sentence 2, "it" in sentence 2, "its" in sentence 2, "the bracketed expression" in sentence 6, "its" in sentence 8, "case the bracketed expression" in sentence 10, "its" in sentence 10]
representative mention: "case the bracketed expression" in sentence 10
CHAIN52-["We" in sentence 7, "we" in sentence 8]
representative mention: "We" in sentence 7
CHAIN22-["the brackets" in sentence 1, "the brackets" in sentence 2]
representative mention: "the brackets" in sentence 1
CHAIN8-["and the order of the terms inside the brackets" in sentence 1, "it" in sentence 1]
representative mention: "and the order of the terms inside the brackets" in sentence 1
CHAIN43-["the terms inside the brackets" in sentence 1, "the terms of the bracketed expression" in sentence 6]
representative mention: "the terms of the bracketed expression" in sentence 6
CHAIN30-["Q" in sentence 3, "Q" in sentence 3]
representative mention: "Q" in sentence 3
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
root(ROOT-0, something-9)
det(values-3, the-2)
case(variable-6, of-4)
det(variable-6, the-5)
cop(something-9, are-7)
cop(something-9, is-8)
punct(something-9, .-13)
auxpass(stipulated-12, is-11)
dobj(something-9, What-1)
nsubj(something-9, values-3)
nmod:of(values-3, variable-6)
nsubjpass(stipulated-12, something-9)
ref(something-9, that-10)
acl:relcl(something-9, stipulated-12)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
root(ROOT-0, something-9)
det(values-3, the-2)
case(variable-6, of-4)
det(variable-6, the-5)
cop(something-9, are-7)
cop(something-9, is-8)
punct(something-9, .-13)
auxpass(stipulated-12, is-11)
dobj(something-9, What-1)
nsubj(something-9, values-3)
nmod:of(values-3, variable-6)
nsubjpass(stipulated-12, something-9)
ref(something-9, that-10)
acl:relcl(something-9, stipulated-12)
root(ROOT-0, description-5)
det(stipulation-2, The-1)
cop(description-5, is-3)
det(description-5, a-4)
punct(description-5, .-16)
case(propositions-8, of-6)
det(propositions-8, the-7)
det(variable-12, the-11)
case(representative-15, as-13)
nsubj(description-5, stipulation-2)
nmod:of(description-5, propositions-8)
nsubj(have-10, propositions-8)
ref(propositions-8, that-9)
acl:relcl(propositions-8, have-10)
dobj(have-10, variable-12)
nmod:poss(representative-15, their-14)
nmod:as(have-10, representative-15)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
root(ROOT-0, something-9)
det(values-3, the-2)
case(variable-6, of-4)
det(variable-6, the-5)
cop(something-9, are-7)
cop(something-9, is-8)
punct(something-9, .-13)
auxpass(stipulated-12, is-11)
dobj(something-9, What-1)
nsubj(something-9, values-3)
nmod:of(values-3, variable-6)
nsubjpass(stipulated-12, something-9)
ref(something-9, that-10)
acl:relcl(something-9, stipulated-12)
root(ROOT-0, description-5)
det(stipulation-2, The-1)
cop(description-5, is-3)
det(description-5, a-4)
punct(description-5, .-16)
case(propositions-8, of-6)
det(propositions-8, the-7)
det(variable-12, the-11)
case(representative-15, as-13)
nsubj(description-5, stipulation-2)
nmod:of(description-5, propositions-8)
nsubj(have-10, propositions-8)
ref(propositions-8, that-9)
acl:relcl(propositions-8, have-10)
dobj(have-10, variable-12)
nmod:poss(representative-15, their-14)
nmod:as(have-10, representative-15)
root(ROOT-0, essential-15)
det(description-3, the-2)
case(terms-6, of-4)
det(terms-6, the-5)
case(expression-10, of-7)
det(expression-10, the-8)
auxpass(produced-12, is-11)
cop(essential-15, is-13)
punct(essential-15, .-16)
advmod(produced-12, How-1)
nsubjpass(produced-12, description-3)
nmod:of(description-3, terms-6)
amod(expression-10, bracketed-9)
nmod:of(terms-6, expression-10)
csubj(essential-15, produced-12)
neg(essential-15, not-14)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
root(ROOT-0, something-9)
det(values-3, the-2)
case(variable-6, of-4)
det(variable-6, the-5)
cop(something-9, are-7)
cop(something-9, is-8)
punct(something-9, .-13)
auxpass(stipulated-12, is-11)
dobj(something-9, What-1)
nsubj(something-9, values-3)
nmod:of(values-3, variable-6)
nsubjpass(stipulated-12, something-9)
ref(something-9, that-10)
acl:relcl(something-9, stipulated-12)
root(ROOT-0, description-5)
det(stipulation-2, The-1)
cop(description-5, is-3)
det(description-5, a-4)
punct(description-5, .-16)
case(propositions-8, of-6)
det(propositions-8, the-7)
det(variable-12, the-11)
case(representative-15, as-13)
nsubj(description-5, stipulation-2)
nmod:of(description-5, propositions-8)
nsubj(have-10, propositions-8)
ref(propositions-8, that-9)
acl:relcl(propositions-8, have-10)
dobj(have-10, variable-12)
nmod:poss(representative-15, their-14)
nmod:as(have-10, representative-15)
root(ROOT-0, essential-15)
det(description-3, the-2)
case(terms-6, of-4)
det(terms-6, the-5)
case(expression-10, of-7)
det(expression-10, the-8)
auxpass(produced-12, is-11)
cop(essential-15, is-13)
punct(essential-15, .-16)
advmod(produced-12, How-1)
nsubjpass(produced-12, description-3)
nmod:of(description-3, terms-6)
amod(expression-10, bracketed-9)
nmod:of(terms-6, expression-10)
csubj(essential-15, produced-12)
neg(essential-15, not-14)
root(ROOT-0, distinguish-3)
aux(distinguish-3, can-2)
punct(distinguish-3, :-8)
punct(distinguish-3, .-10)
case(description-7, of-6)
nsubj(distinguish-3, We-1)
nummod(kinds-5, three-4)
dobj(distinguish-3, kinds-5)
nmod:of(kinds-5, description-7)
dep(distinguish-3, 1-9)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
root(ROOT-0, something-9)
det(values-3, the-2)
case(variable-6, of-4)
det(variable-6, the-5)
cop(something-9, are-7)
cop(something-9, is-8)
punct(something-9, .-13)
auxpass(stipulated-12, is-11)
dobj(something-9, What-1)
nsubj(something-9, values-3)
nmod:of(values-3, variable-6)
nsubjpass(stipulated-12, something-9)
ref(something-9, that-10)
acl:relcl(something-9, stipulated-12)
root(ROOT-0, description-5)
det(stipulation-2, The-1)
cop(description-5, is-3)
det(description-5, a-4)
punct(description-5, .-16)
case(propositions-8, of-6)
det(propositions-8, the-7)
det(variable-12, the-11)
case(representative-15, as-13)
nsubj(description-5, stipulation-2)
nmod:of(description-5, propositions-8)
nsubj(have-10, propositions-8)
ref(propositions-8, that-9)
acl:relcl(propositions-8, have-10)
dobj(have-10, variable-12)
nmod:poss(representative-15, their-14)
nmod:as(have-10, representative-15)
root(ROOT-0, essential-15)
det(description-3, the-2)
case(terms-6, of-4)
det(terms-6, the-5)
case(expression-10, of-7)
det(expression-10, the-8)
auxpass(produced-12, is-11)
cop(essential-15, is-13)
punct(essential-15, .-16)
advmod(produced-12, How-1)
nsubjpass(produced-12, description-3)
nmod:of(description-3, terms-6)
amod(expression-10, bracketed-9)
nmod:of(terms-6, expression-10)
csubj(essential-15, produced-12)
neg(essential-15, not-14)
root(ROOT-0, distinguish-3)
aux(distinguish-3, can-2)
punct(distinguish-3, :-8)
punct(distinguish-3, .-10)
case(description-7, of-6)
nsubj(distinguish-3, We-1)
nummod(kinds-5, three-4)
dobj(distinguish-3, kinds-5)
nmod:of(kinds-5, description-7)
dep(distinguish-3, 1-9)
root(ROOT-0, enumeration-2)
punct(enumeration-2, .-22)
punct(enumeration-2, ,-3)
punct(enumeration-2, ;-20)
case(case-6, in-4)
det(case-6, enumeration-2)
aux(substitute-10, can-8)
case(variable-13, for-11)
det(variable-13, the-12)
det(constants-15, the-14)
cop(values-19, are-17)
amod(enumeration-2, Direct-1)
ref(enumeration-2, which-5)
nmod:in(substitute-10, case-6)
nsubj(substitute-10, we-7)
advmod(substitute-10, simply-9)
acl:relcl(enumeration-2, substitute-10)
nmod:for(substitute-10, variable-13)
dep(variable-13, constants-15)
nsubj(values-19, constants-15)
ref(constants-15, that-16)
nmod:poss(values-19, its-18)
acl:relcl(constants-15, values-19)
dep(enumeration-2, 2-21)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-13, the-12)
punct(order-13, ---10)
case(terms-16, of-14)
det(terms-16, the-15)
case(brackets-19, inside-17)
det(brackets-19, the-18)
cop(indifferent-21, is-20)
punct(indifferent-21, ---22)
punct(indifferent-21, .-38)
punct(indifferent-21, '-39)
case(sign-29, by-27)
det(sign-29, a-28)
case(form-32, of-30)
det(form-32, the-31)
punct(form-32, '-33)
punct(form-32, '-37)
punct(E-35, -LRB--34)
punct(E-35, -RRB--36)
advmod(has-5, When-1)
amod(expression-4, bracketed-3)
nsubj(has-5, expression-4)
advcl(indifferent-21, has-5)
dobj(has-5, propositions-6)
nmod:poss(terms-9, its-8)
nmod:as(has-5, terms-9)
nsubj(indifferent-21, order-13)
nmod:of(order-13, terms-16)
nmod:inside(terms-16, brackets-19)
advmod(indicate-25, then-23)
nsubj(indicate-25, I-24)
parataxis(indifferent-21, indicate-25)
dobj(indicate-25, it-26)
nmod:by(indicate-25, sign-29)
nmod:of(sign-29, form-32)
appos(form-32, E-35)
root(ROOT-0, variable-7)
punct(E-2, -RRB--3)
punct(E-2, '-4)
punct(E-2, -LRB--1)
cop(variable-7, is-5)
det(variable-7, a-6)
punct(variable-7, .-35)
cop(terms-11, are-10)
case(expression-15, of-12)
cc(expression-15, and-16)
det(expression-15, the-13)
det(bar-18, the-17)
case(variable-21, over-19)
det(variable-21, the-20)
cop(representative-27, is-25)
det(representative-27, the-26)
mark(representative-27, that-23)
case(ali-29, of-28)
case(brackets-34, in-32)
det(brackets-34, the-33)
nsubj(variable-7, E-2)
nmod:poss(values-9, variable-7)
ref(variable-7, whose-8)
nsubj(terms-11, values-9)
acl:relcl(variable-7, terms-11)
amod(expression-15, bracketed-14)
nmod:of(terms-11, expression-15)
nmod:of(terms-11, bar-18)
conj:and(expression-15, bar-18)
nmod:over(expression-15, variable-21)
acl(terms-11, indicates-22)
nsubj(representative-27, it-24)
ccomp(indicates-22, representative-27)
nmod:of(representative-27, ali-29)
nmod:poss(values-31, its-30)
dobj(representative-27, values-31)
nmod:in(values-31, brackets-34)
root(ROOT-0, -LRB--1)
punct(E.g.-2, -RRB--28)
mark(has-5, if-3)
punct(has-5, .-27)
det(values-8, the-6)
punct(P-9, ,-10)
punct(P-9, ,-12)
punct(P-9, ,-14)
punct(E-17, -LRB--16)
punct(E-17, -RRB--18)
punct(P-21, ,-22)
punct(P-21, ,-24)
punct(P-21, -RRB--26)
punct(P-21, -LRB--20)
root(-LRB--1, E.g.-2)
nsubj(has-5, E-4)
dep(E.g.-2, has-5)
nummod(values-8, three-7)
dobj(has-5, values-8)
dep(values-8, P-9)
conj(P-9, Q-11)
conj(P-9, R-13)
advmod(=-19, then-15)
dep(=-19, E-17)
conj(P-9, =-19)
dep(=-19, P-21)
appos(P-21, Q-23)
appos(P-21, R-25)
root(ROOT-0, something-9)
det(values-3, the-2)
case(variable-6, of-4)
det(variable-6, the-5)
cop(something-9, are-7)
cop(something-9, is-8)
punct(something-9, .-13)
auxpass(stipulated-12, is-11)
dobj(something-9, What-1)
nsubj(something-9, values-3)
nmod:of(values-3, variable-6)
nsubjpass(stipulated-12, something-9)
ref(something-9, that-10)
acl:relcl(something-9, stipulated-12)
root(ROOT-0, description-5)
det(stipulation-2, The-1)
cop(description-5, is-3)
det(description-5, a-4)
punct(description-5, .-16)
case(propositions-8, of-6)
det(propositions-8, the-7)
det(variable-12, the-11)
case(representative-15, as-13)
nsubj(description-5, stipulation-2)
nmod:of(description-5, propositions-8)
nsubj(have-10, propositions-8)
ref(propositions-8, that-9)
acl:relcl(propositions-8, have-10)
dobj(have-10, variable-12)
nmod:poss(representative-15, their-14)
nmod:as(have-10, representative-15)
root(ROOT-0, essential-15)
det(description-3, the-2)
case(terms-6, of-4)
det(terms-6, the-5)
case(expression-10, of-7)
det(expression-10, the-8)
auxpass(produced-12, is-11)
cop(essential-15, is-13)
punct(essential-15, .-16)
advmod(produced-12, How-1)
nsubjpass(produced-12, description-3)
nmod:of(description-3, terms-6)
amod(expression-10, bracketed-9)
nmod:of(terms-6, expression-10)
csubj(essential-15, produced-12)
neg(essential-15, not-14)
root(ROOT-0, distinguish-3)
aux(distinguish-3, can-2)
punct(distinguish-3, :-8)
punct(distinguish-3, .-10)
case(description-7, of-6)
nsubj(distinguish-3, We-1)
nummod(kinds-5, three-4)
dobj(distinguish-3, kinds-5)
nmod:of(kinds-5, description-7)
dep(distinguish-3, 1-9)
root(ROOT-0, enumeration-2)
punct(enumeration-2, .-22)
punct(enumeration-2, ,-3)
punct(enumeration-2, ;-20)
case(case-6, in-4)
det(case-6, enumeration-2)
aux(substitute-10, can-8)
case(variable-13, for-11)
det(variable-13, the-12)
det(constants-15, the-14)
cop(values-19, are-17)
amod(enumeration-2, Direct-1)
ref(enumeration-2, which-5)
nmod:in(substitute-10, case-6)
nsubj(substitute-10, we-7)
advmod(substitute-10, simply-9)
acl:relcl(enumeration-2, substitute-10)
nmod:for(substitute-10, variable-13)
dep(variable-13, constants-15)
nsubj(values-19, constants-15)
ref(constants-15, that-16)
nmod:poss(values-19, its-18)
acl:relcl(constants-15, values-19)
dep(enumeration-2, 2-21)
root(ROOT-0, giving-1)
punct(giving-1, ;-18)
punct(giving-1, .-20)
compound(fx-4, function-3)
det(fx-4, a-2)
case(values-9, for-7)
det(values-9, all-8)
case(x-11, of-10)
cop(propositions-14, are-12)
det(propositions-14, the-13)
auxpass(described-17, be-16)
mark(described-17, to-15)
dobj(giving-1, fx-4)
nmod:poss(values-6, fx-4)
ref(fx-4, whose-5)
nsubj(propositions-14, values-6)
nmod:for(values-6, values-9)
nmod:of(values-9, x-11)
acl:relcl(fx-4, propositions-14)
acl:to(propositions-14, described-17)
dep(giving-1, 3-19)
---
qqroot(ROOT-0, indifferent-21)
det(expression-4, a-2)
case(terms-9, as-7)
cc(order-13, and-11)
det(order-1