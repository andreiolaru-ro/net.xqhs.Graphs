 Must the sign of a negative proposition be constructed with that of the positive proposition? Why should it not be possible to express a negative proposition by means of a negative fact? (E.g. suppose that "a' does not stand in a certain relation to 'b'; then this might be used to say that aRb was not the case.) But really even in this case the negative proposition is constructed by an indirect use of the positive. The positive proposition necessarily presupposes the existence of the negative proposition and vice versa.
------CorefChainz
CHAIN18-["a negative proposition" in sentence 1, "the positive proposition" in sentence 1, "a negative proposition" in sentence 2, "the negative proposition" in sentence 4, "The positive proposition" in sentence 5, "the negative proposition" in sentence 5]
representative mention: "a negative proposition" in sentence 1
CHAIN4-["the sign of a negative proposition" in sentence 1, "it" in sentence 2]
representative mention: "the sign of a negative proposition" in sentence 1
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, constructed-9)
det(sign-3, the-2)
case(proposition-7, of-4)
det(proposition-7, a-5)
aux(constructed-9, Must-1)
auxpass(constructed-9, be-8)
punct(constructed-9, ?-16)
case(that-11, with-10)
case(proposition-15, of-12)
det(proposition-15, the-13)
nsubjpass(constructed-9, sign-3)
amod(proposition-7, negative-6)
nmod:of(sign-3, proposition-7)
nmod:with(constructed-9, that-11)
amod(proposition-15, positive-14)
nmod:of(that-11, proposition-15)
---
qqroot(ROOT-0, constructed-9)
det(sign-3, the-2)
case(proposition-7, of-4)
det(proposition-7, a-5)
aux(constructed-9, Must-1)
auxpass(constructed-9, be-8)
punct(constructed-9, ?-16)
case(that-11, with-10)
case(proposition-15, of-12)
det(proposition-15, the-13)
nsubjpass(constructed-9, sign-3)
amod(proposition-7, negative-6)
nmod:of(sign-3, proposition-7)
nmod:with(constructed-9, that-11)
amod(proposition-15, positive-14)
nmod:of(that-11, proposition-15)
root(ROOT-0, possible-6)
mwe(by-12, means-13)
mwe(by-12, of-14)
aux(possible-6, should-2)
cop(possible-6, be-5)
punct(possible-6, ?-18)
mark(express-8, to-7)
det(proposition-11, a-9)
case(fact-17, by-12)
det(fact-17, a-15)
advmod(possible-6, Why-1)
nsubj(possible-6, it-3)
nsubj:xsubj(express-8, it-3)
neg(possible-6, not-4)
xcomp(possible-6, express-8)
amod(proposition-11, negative-10)
dobj(express-8, proposition-11)
amod(fact-17, negative-16)
nmod:by_means_of(express-8, fact-17)
---
qqroot(ROOT-0, constructed-9)
det(sign-3, the-2)
case(proposition-7, of-4)
det(proposition-7, a-5)
aux(constructed-9, Must-1)
auxpass(constructed-9, be-8)
punct(constructed-9, ?-16)
case(that-11, with-10)
case(proposition-15, of-12)
det(proposition-15, the-13)
nsubjpass(constructed-9, sign-3)
amod(proposition-7, negative-6)
nmod:of(sign-3, proposition-7)
nmod:with(constructed-9, that-11)
amod(proposition-15, positive-14)
nmod:of(that-11, proposition-15)
root(ROOT-0, possible-6)
mwe(by-12, means-13)
mwe(by-12, of-14)
aux(possible-6, should-2)
cop(possible-6, be-5)
punct(possible-6, ?-18)
mark(express-8, to-7)
det(proposition-11, a-9)
case(fact-17, by-12)
det(fact-17, a-15)
advmod(possible-6, Why-1)
nsubj(possible-6, it-3)
nsubj:xsubj(express-8, it-3)
neg(possible-6, not-4)
xcomp(possible-6, express-8)
amod(proposition-11, negative-10)
dobj(express-8, proposition-11)
amod(fact-17, negative-16)
nmod:by_means_of(express-8, fact-17)
root(ROOT-0, suppose-3)
punct(suppose-3, -LRB--1)
punct(suppose-3, .-33)
punct(suppose-3, -RRB--34)
punct(suppose-3, ;-19)
aux(stand-10, does-8)
det(stand-10, a-6)
mark(stand-10, that-4)
punct(stand-10, '-7)
punct(stand-10, ``-5)
case(relation-14, in-11)
det(relation-14, a-12)
case(b-17, to-15)
punct(b-17, `-16)
punct(b-17, '-18)
aux(used-24, might-22)
auxpass(used-24, be-23)
mark(say-26, to-25)
cop(case-32, was-29)
det(case-32, the-31)
mark(case-32, that-27)
nsubj(suppose-3, E.g.-2)
neg(stand-10, not-9)
ccomp(suppose-3, stand-10)
amod(relation-14, certain-13)
nmod:in(stand-10, relation-14)
nmod:to(relation-14, b-17)
advmod(used-24, then-20)
nsubjpass(used-24, this-21)
nsubj:xsubj(say-26, this-21)
parataxis(suppose-3, used-24)
xcomp(used-24, say-26)
nsubj(case-32, aRb-28)
neg(case-32, not-30)
ccomp(say-26, case-32)
---
qqroot(ROOT-0, constructed-9)
det(sign-3, the-2)
case(proposition-7, of-4)
det(proposition-7, a-5)
aux(constructed-9, Must-1)
auxpass(constructed-9, be-8)
punct(constructed-9, ?-16)
case(that-11, with-10)
case(proposition-15, of-12)
det(proposition-15, the-13)
nsubjpass(constructed-9, sign-3)
amod(proposition-7, negative-6)
nmod:of(sign-3, proposition-7)
nmod:with(constructed-9, that-11)
amod(proposition-15, positive-14)
nmod:of(that-11, proposition-15)
root(ROOT-0, possible-6)
mwe(by-12, means-13)
mwe(by-12, of-14)
aux(possible-6, should-2)
cop(possible-6, be-5)
punct(possible-6, ?-18)
mark(express-8, to-7)
det(proposition-11, a-9)
case(fact-17, by-12)
det(fact-17, a-15)
advmod(possible-6, Why-1)
nsubj(possible-6, it-3)
nsubj:xsubj(express-8, it-3)
neg(possible-6, not-4)
xcomp(possible-6, express-8)
amod(proposition-11, negative-10)
dobj(express-8, proposition-11)
amod(fact-17, negative-16)
nmod:by_means_of(express-8, fact-17)
root(ROOT-0, suppose-3)
punct(suppose-3, -LRB--1)
punct(suppose-3, .-33)
punct(suppose-3, -RRB--34)
punct(suppose-3, ;-19)
aux(stand-10, does-8)
det(stand-10, a-6)
mark(stand-10, that-4)
punct(stand-10, '-7)
punct(stand-10, ``-5)
case(relation-14, in-11)
det(relation-14, a-12)
case(b-17, to-15)
punct(b-17, `-16)
punct(b-17, '-18)
aux(used-24, might-22)
auxpass(used-24, be-23)
mark(say-26, to-25)
cop(case-32, was-29)
det(case-32, the-31)
mark(case-32, that-27)
nsubj(suppose-3, E.g.-2)
neg(stand-10, not-9)
ccomp(suppose-3, stand-10)
amod(relation-14, certain-13)
nmod:in(stand-10, relation-14)
nmod:to(relation-14, b-17)
advmod(used-24, then-20)
nsubjpass(used-24, this-21)
nsubj:xsubj(say-26, this-21)
parataxis(suppose-3, used-24)
xcomp(used-24, say-26)
nsubj(case-32, aRb-28)
neg(case-32, not-30)
ccomp(say-26, case-32)
root(ROOT-0, But-1)
case(case-6, in-4)
det(case-6, this-5)
punct(case-6, .-19)
det(proposition-9, the-7)
auxpass(constructed-11, is-10)
case(use-15, by-12)
det(use-15, an-13)
case(positive-18, of-16)
det(positive-18, the-17)
advmod(case-6, really-2)
advmod(case-6, even-3)
root(But-1, case-6)
amod(proposition-9, negative-8)
nsubjpass(constructed-11, proposition-9)
acl:relcl(case-6, constructed-11)
amod(use-15, indirect-14)
nmod:agent(constructed-11, use-15)
nmod:of(use-15, positive-18)
---
qqroot(ROOT-0, constructed-9)
det(sign-3, the-2)
case(proposition-7, of-4)
det(proposition-7, a-5)
aux(constructed-9, Must-1)
auxpass(constructed-9, be-8)
punct(constructed-9, ?-16)
case(that-11, with-10)
case(proposition-15, of-12)
det(proposition-15, the-13)
nsubjpass(constructed-9, sign-3)
amod(proposition-7, negative-6)
nmod:of(sign-3, proposition-7)
nmod:with(constructed-9, that-11)
amod(proposition-15, positive-14)
nmod:of(that-11, proposition-15)
root(ROOT-0, possible-6)
mwe(by-12, means-13)
mwe(by-12, of-14)
aux(possible-6, should-2)
cop(possible-6, be-5)
punct(possible-6, ?-18)
mark(express-8, to-7)
det(proposition-11, a-9)
case(fact-17, by-12)
det(fact-17, a-15)
advmod(possible-6, Why-1)
nsubj(possible-6, it-3)
nsubj:xsubj(express-8, it-3)
neg(possible-6, not-4)
xcomp(possible-6, express-8)
amod(proposition-11, negative-10)
dobj(express-8, proposition-11)
amod(fact-17, negative-16)
nmod:by_means_of(express-8, fact-17)
root(ROOT-0, suppose-3)
punct(suppose-3, -LRB--1)
punct(suppose-3, .-33)
punct(suppose-3, -RRB--34)
punct(suppose-3, ;-19)
aux(stand-10, does-8)
det(stand-10, a-6)
mark(stand-10, that-4)
punct(stand-10, '-7)
punct(stand-10, ``-5)
case(relation-14, in-11)
det(relation-14, a-12)
case(b-17, to-15)
punct(b-17, `-16)
punct(b-17, '-18)
aux(used-24, might-22)
auxpass(used-24, be-23)
mark(say-26, to-25)
cop(case-32, was-29)
det(case-32, the-31)
mark(case-32, that-27)
nsubj(suppose-3, E.g.-2)
neg(stand-10, not-9)
ccomp(suppose-3, stand-10)
amod(relation-14, certain-13)
nmod:in(stand-10, relation-14)
nmod:to(relation-14, b-17)
advmod(used-24, then-20)
nsubjpass(used-24, this-21)
nsubj:xsubj(say-26, this-21)
parataxis(suppose-3, used-24)
xcomp(used-24, say-26)
nsubj(case-32, aRb-28)
neg(case-32, not-30)
ccomp(say-26, case-32)
root(ROOT-0, But-1)
case(case-6, in-4)
det(case-6, this-5)
punct(case-6, .-19)
det(proposition-9, the-7)
auxpass(constructed-11, is-10)
case(use-15, by-12)
det(use-15, an-13)
case(positive-18, of-16)
det(positive-18, the-17)
advmod(case-6, really-2)
advmod(case-6, even-3)
root(But-1, case-6)
amod(proposition-9, negative-8)
nsubjpass(constructed-11, proposition-9)
acl:relcl(case-6, constructed-11)
amod(use-15, indirect-14)
nmod:agent(constructed-11, use-15)
nmod:of(use-15, positive-18)
root(ROOT-0, presupposes-5)
det(proposition-3, The-1)
punct(presupposes-5, .-15)
det(existence-7, the-6)
case(proposition-11, of-8)
cc(proposition-11, and-12)
det(proposition-11, the-9)
amod(proposition-3, positive-2)
nsubj(presupposes-5, proposition-3)
advmod(presupposes-5, necessarily-4)
dobj(presupposes-5, existence-7)
amod(proposition-11, negative-10)
nmod:of(existence-7, proposition-11)
nmod:npmod(versa-14, vice-13)
nmod:of(existence-7, versa-14)
conj:and(proposition-11, versa-14)
G[43, 42] [?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13, ?14, ?15, But1, b17, by means of12, case2147483647, case2147483647, constructed11, constructed9, existence2147483647, express8, fact2147483647, positive2147483647, possible6, presupposes5, proposition2147483647, proposition2147483647, proposition2147483647, proposition2147483647, proposition2147483647, proposition2147483647, relation2147483647, say26, sign2147483647, stand2147483647, suppose3, that11, use2147483647, used24, versa14]
?11-the->proposition2147483647
?3-  : in ->But1
?1-The->proposition2147483647
?6-the->case2147483647
?10-in->?15
?1- ->?7
?7-a->proposition2147483647
b17-to->?10
?13-the->existence2147483647
?4-an->use2147483647
?3-this->case2147483647
?2- ->?7
?9-the->sign2147483647
?2-of->?13
?14-a->proposition2147483647
?12-the->proposition2147483647
say26-  : might  : be  : to ->used24
?7-of->?9
constructed11-relcl->?3
?9-  : Must ->constructed9
?8-the->positive2147483647
express8-  : to  : should  : be ->possible6
?15-  : that  : does ->suppose3
?1- ->presupposes5
?6-  : that  : was ->say26
?5-a->fact2147483647
that11-with : be ->constructed9
?4-agent : by ->constructed11
?11-of->that11
?14- ->express8
?2-the->proposition2147483647
used24- ->suppose3
?12-  : is ->constructed11
?8-of->?4
?5-by_means_of : by means of ->express8
?13- ->presupposes5
versa14-of->?13
versa14-and->?2
?12- ->?7
?4- ->?7
?15-a->stand2147483647
?10-a->relation2147483647
------CorefChainz
CHAIN18-["a negative proposition" in sentence 1, "the positive proposition" in sentence 1, "a negative proposition" in sentence 2, "the negative proposition" in sentence 4, "The positive proposition" in sentence 5, "the negative proposition" in sentence 5]
representative mention: "a negative proposition" in sentence 1
CHAIN4-["the sign of a negative proposition" in sentence 1, "it" in sentence 2]
representative mention: "the sign of a negative proposition" in sentence 1
