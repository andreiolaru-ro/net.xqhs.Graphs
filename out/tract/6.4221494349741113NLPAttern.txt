 When an ethical law of the form, 'Thou shalt ...' is laid down, one's first thought is, 'And what if I do, not do it?' It is clear, however, that ethics has nothing to do with punishment and reward in the usual sense of the terms. So our question about the consequences of an action must be unimportant.--At least those consequences should not be events. For there must be something right about the question we posed. There must indeed be some kind of ethical reward and ethical punishment, but they must reside in the action itself. (And it is also clear that the reward must be something pleasant and the punishment something unpleasant.)
------CorefChainz
CHAIN20-["the consequences of an action" in sentence 3, "least those consequences" in sentence 4]
representative mention: "least those consequences" in sentence 4
CHAIN7-["one 's first thought" in sentence 1, "it" in sentence 1]
representative mention: "one 's first thought" in sentence 1
CHAIN26-["an action" in sentence 3, "the action itself" in sentence 6, "itself" in sentence 6]
representative mention: "the action itself" in sentence 6
CHAIN31-["ethical reward" in sentence 6, "the reward" in sentence 7]
representative mention: "ethical reward" in sentence 6
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
root(ROOT-0, clear-3)
cop(clear-3, is-2)
punct(clear-3, ,-4)
punct(clear-3, ,-6)
punct(clear-3, .-24)
mark(has-9, that-7)
mark(do-12, to-11)
case(punishment-14, with-13)
cc(punishment-14, and-15)
case(sense-20, in-17)
det(sense-20, the-18)
case(terms-23, of-21)
det(terms-23, the-22)
nsubj(clear-3, It-1)
advmod(clear-3, however-5)
nsubj(has-9, ethics-8)
ccomp(clear-3, has-9)
dobj(has-9, nothing-10)
acl:to(nothing-10, do-12)
nmod:with(do-12, punishment-14)
nmod:with(do-12, reward-16)
conj:and(punishment-14, reward-16)
amod(sense-20, usual-19)
nmod:in(do-12, sense-20)
nmod:of(sense-20, terms-23)
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
root(ROOT-0, clear-3)
cop(clear-3, is-2)
punct(clear-3, ,-4)
punct(clear-3, ,-6)
punct(clear-3, .-24)
mark(has-9, that-7)
mark(do-12, to-11)
case(punishment-14, with-13)
cc(punishment-14, and-15)
case(sense-20, in-17)
det(sense-20, the-18)
case(terms-23, of-21)
det(terms-23, the-22)
nsubj(clear-3, It-1)
advmod(clear-3, however-5)
nsubj(has-9, ethics-8)
ccomp(clear-3, has-9)
dobj(has-9, nothing-10)
acl:to(nothing-10, do-12)
nmod:with(do-12, punishment-14)
nmod:with(do-12, reward-16)
conj:and(punishment-14, reward-16)
amod(sense-20, usual-19)
nmod:in(do-12, sense-20)
nmod:of(sense-20, terms-23)
root(ROOT-0, unimportant-12)
case(consequences-6, about-4)
det(consequences-6, the-5)
case(action-9, of-7)
det(action-9, an-8)
aux(unimportant-12, must-10)
cop(unimportant-12, be-11)
punct(unimportant-12, .-13)
advmod(unimportant-12, So-1)
nmod:poss(question-3, our-2)
nsubj(unimportant-12, question-3)
nmod:about(question-3, consequences-6)
nmod:of(consequences-6, action-9)
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
root(ROOT-0, clear-3)
cop(clear-3, is-2)
punct(clear-3, ,-4)
punct(clear-3, ,-6)
punct(clear-3, .-24)
mark(has-9, that-7)
mark(do-12, to-11)
case(punishment-14, with-13)
cc(punishment-14, and-15)
case(sense-20, in-17)
det(sense-20, the-18)
case(terms-23, of-21)
det(terms-23, the-22)
nsubj(clear-3, It-1)
advmod(clear-3, however-5)
nsubj(has-9, ethics-8)
ccomp(clear-3, has-9)
dobj(has-9, nothing-10)
acl:to(nothing-10, do-12)
nmod:with(do-12, punishment-14)
nmod:with(do-12, reward-16)
conj:and(punishment-14, reward-16)
amod(sense-20, usual-19)
nmod:in(do-12, sense-20)
nmod:of(sense-20, terms-23)
root(ROOT-0, unimportant-12)
case(consequences-6, about-4)
det(consequences-6, the-5)
case(action-9, of-7)
det(action-9, an-8)
aux(unimportant-12, must-10)
cop(unimportant-12, be-11)
punct(unimportant-12, .-13)
advmod(unimportant-12, So-1)
nmod:poss(question-3, our-2)
nsubj(unimportant-12, question-3)
nmod:about(question-3, consequences-6)
nmod:of(consequences-6, action-9)
root(ROOT-0, events-9)
case(least-3, At-2)
det(consequences-5, those-4)
aux(events-9, should-6)
cop(events-9, be-8)
punct(events-9, .-10)
punct(events-9, ---1)
advmod(consequences-5, least-3)
nsubj(events-9, consequences-5)
neg(events-9, not-7)
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
root(ROOT-0, clear-3)
cop(clear-3, is-2)
punct(clear-3, ,-4)
punct(clear-3, ,-6)
punct(clear-3, .-24)
mark(has-9, that-7)
mark(do-12, to-11)
case(punishment-14, with-13)
cc(punishment-14, and-15)
case(sense-20, in-17)
det(sense-20, the-18)
case(terms-23, of-21)
det(terms-23, the-22)
nsubj(clear-3, It-1)
advmod(clear-3, however-5)
nsubj(has-9, ethics-8)
ccomp(clear-3, has-9)
dobj(has-9, nothing-10)
acl:to(nothing-10, do-12)
nmod:with(do-12, punishment-14)
nmod:with(do-12, reward-16)
conj:and(punishment-14, reward-16)
amod(sense-20, usual-19)
nmod:in(do-12, sense-20)
nmod:of(sense-20, terms-23)
root(ROOT-0, unimportant-12)
case(consequences-6, about-4)
det(consequences-6, the-5)
case(action-9, of-7)
det(action-9, an-8)
aux(unimportant-12, must-10)
cop(unimportant-12, be-11)
punct(unimportant-12, .-13)
advmod(unimportant-12, So-1)
nmod:poss(question-3, our-2)
nsubj(unimportant-12, question-3)
nmod:about(question-3, consequences-6)
nmod:of(consequences-6, action-9)
root(ROOT-0, events-9)
case(least-3, At-2)
det(consequences-5, those-4)
aux(events-9, should-6)
cop(events-9, be-8)
punct(events-9, .-10)
punct(events-9, ---1)
advmod(consequences-5, least-3)
nsubj(events-9, consequences-5)
neg(events-9, not-7)
root(ROOT-0, something-5)
aux(something-5, must-3)
cop(something-5, be-4)
mark(something-5, For-1)
punct(something-5, .-12)
case(question-9, about-7)
det(question-9, the-8)
expl(something-5, there-2)
amod(something-5, right-6)
nmod:about(right-6, question-9)
nsubj(posed-11, we-10)
acl:relcl(question-9, posed-11)
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
root(ROOT-0, clear-3)
cop(clear-3, is-2)
punct(clear-3, ,-4)
punct(clear-3, ,-6)
punct(clear-3, .-24)
mark(has-9, that-7)
mark(do-12, to-11)
case(punishment-14, with-13)
cc(punishment-14, and-15)
case(sense-20, in-17)
det(sense-20, the-18)
case(terms-23, of-21)
det(terms-23, the-22)
nsubj(clear-3, It-1)
advmod(clear-3, however-5)
nsubj(has-9, ethics-8)
ccomp(clear-3, has-9)
dobj(has-9, nothing-10)
acl:to(nothing-10, do-12)
nmod:with(do-12, punishment-14)
nmod:with(do-12, reward-16)
conj:and(punishment-14, reward-16)
amod(sense-20, usual-19)
nmod:in(do-12, sense-20)
nmod:of(sense-20, terms-23)
root(ROOT-0, unimportant-12)
case(consequences-6, about-4)
det(consequences-6, the-5)
case(action-9, of-7)
det(action-9, an-8)
aux(unimportant-12, must-10)
cop(unimportant-12, be-11)
punct(unimportant-12, .-13)
advmod(unimportant-12, So-1)
nmod:poss(question-3, our-2)
nsubj(unimportant-12, question-3)
nmod:about(question-3, consequences-6)
nmod:of(consequences-6, action-9)
root(ROOT-0, events-9)
case(least-3, At-2)
det(consequences-5, those-4)
aux(events-9, should-6)
cop(events-9, be-8)
punct(events-9, .-10)
punct(events-9, ---1)
advmod(consequences-5, least-3)
nsubj(events-9, consequences-5)
neg(events-9, not-7)
root(ROOT-0, something-5)
aux(something-5, must-3)
cop(something-5, be-4)
mark(something-5, For-1)
punct(something-5, .-12)
case(question-9, about-7)
det(question-9, the-8)
expl(something-5, there-2)
amod(something-5, right-6)
nmod:about(right-6, question-9)
nsubj(posed-11, we-10)
acl:relcl(question-9, posed-11)
root(ROOT-0, kind-6)
aux(kind-6, must-2)
cc(kind-6, but-14)
cop(kind-6, be-4)
det(kind-6, some-5)
punct(kind-6, .-22)
punct(kind-6, ,-13)
case(reward-9, of-7)
cc(reward-9, and-10)
aux(reside-17, must-16)
case(action-20, in-18)
det(action-20, the-19)
expl(kind-6, There-1)
advmod(kind-6, indeed-3)
amod(reward-9, ethical-8)
nmod:of(kind-6, reward-9)
amod(punishment-12, ethical-11)
nmod:of(kind-6, punishment-12)
conj:and(reward-9, punishment-12)
nsubj(reside-17, they-15)
conj:but(kind-6, reside-17)
nmod:in(reside-17, action-20)
nmod:npmod(action-20, itself-21)
---
qqroot(ROOT-0, When-1)
det(law-4, an-2)
punct(law-4, ?-34)
punct(law-4, '-35)
punct(law-4, ,-8)
case(form-7, of-5)
det(form-7, the-6)
punct(shalt-11, `-9)
punct(shalt-11, ...-12)
punct(shalt-11, '-13)
auxpass(laid-15, is-14)
punct(laid-15, ,-17)
case(one-18, 's-19)
cc(is-22, And-25)
punct(is-22, ,-23)
punct(is-22, `-24)
mark(do-29, if-27)
punct(do-32, ,-30)
amod(law-4, ethical-3)
dep(When-1, law-4)
nmod:of(law-4, form-7)
nsubj(shalt-11, Thou-10)
acl:relcl(law-4, shalt-11)
nmod(shalt-11, laid-15)
compound:prt(laid-15, down-16)
nmod:poss(thought-21, one-18)
amod(thought-21, first-20)
nsubj(is-22, thought-21)
nsubj(do-32, thought-21)
dep(laid-15, is-22)
dobj(do-32, what-26)
nsubj(do-29, I-28)
advcl:if(do-32, do-29)
neg(do-32, not-31)
dep(laid-15, do-32)
conj:and(is-22, do-32)
dobj(do-32, it-33)
root(ROOT-0, clear-3)
cop(clear-3, is-2)
punct(clear-3, ,-4)
punct(clear-3, ,-6)
punct(clear-3, .-24)
mark(has-9, that-7)
mark(do-12, to-11)
case(punishment-14, with-13)
cc(punishment-14, and-15)
case(sense-20, in-17)
det(sense-20, the-18)
case(terms-23, of-21)
det(terms-23, the-22)
nsubj(clear-3, It-1)
advmod(clear-3, however-5)
nsubj(has-9, ethics-8)
ccomp(clear-3, has-9)
dobj(has-9, nothing-10)
acl:to(nothing-10, do-12)
nmod:with(do-12, punishment-14)
nmod:with(do-12, reward-16)
conj:and(punishment-14, reward-16)
amod(sense-20, usual-19)
nmod:in(do-12, sense-20)
nmod:of(sense-20, terms-23)
root(ROOT-0, unimportant-12)
case(consequences-6, about-4)
det(consequences-6, the-5)
case(action-9, of-7)
det(action-9, an-8)
aux(unimportant-12, must-10)
cop(unimportant-12, be-11)
punct(unimportant-12, .-13)
advmod(unimportant-12, So-1)
nmod:poss(question-3, our-2)
nsubj(unimportant-12, question-3)
nmod:about(question-3, consequences-6)
nmod:of(consequences-6, action-9)
root(ROOT-0, events-9)
case(least-3, At-2)
det(consequences-5, those-4)
aux(events-9, should-6)
cop(events-9, be-8)
punct(events-9, .-10)
punct(events-9, ---1)
advmod(consequences-5, least-3)
nsubj(events-9, consequences-5)
neg(events-9, not-7)
root(ROOT-0, something-5)
aux(something-5, must-3)
cop(something-5, be-4)
mark(something-5, For-1)
punct(something-5, .-12)
case(question-9, about-7)
det(question-9, the-8)
expl(something-5, there-2)
amod(something-5, right-6)
nmod:about(right-6, question-9)
nsubj(posed-11, we-10)
acl:relcl(question-9, posed-11)
root(ROOT-0, kind-6)
aux(kind-6, must-2)
cc(kind-6, but-14)
cop(kind-6, be-4)
det(kind-6, some-5)
punct(kind-6, .-22)
punct(kind-6, ,-13)
case(reward-9, of-7)
cc(reward-9, and-10)
aux(reside-17, must-16)
case(action-20, in-18)
det(action-20, the-19)
expl(kind-6, There-1)
advmod(kind-6, indeed-3)
amod(reward-9, ethical-8)
nmod:of(kind-6, reward-9)
amod(punishment-12, ethical-11)
nmod:of(kind-6, punishment-12)
conj:and(reward-9, punishment-12)
nsubj(reside-17, they-15)
conj:but(kind-6, reside-17)
nmod:in(reside-17, action-20)
nmod:npmod(action-20, itself-21)
root(ROOT-0, clear-6)
cc(clear-6, And-2)
cop(clear-6, is-4)
punct(clear-6, .-19)
punct(clear-6, -RRB--20)
punct(clear-6, -LRB--1)
det(reward-9, the-8)
aux(pleasant-13, must-10)
cc(pleasant-13, and-14)
cop(pleasant-13, be-11)
mark(pleasant-13, that-7)
det(punishment-16, the-15)
nsubj(clear-6, it-3)
advmod(clear-6, also-5)
nsubj(pleasant-13, reward-9)
nmod:npmod(pleasant-13, something-12)
ccomp(clear-6, pleasant-13)
ccomp(clear-6, punishment-16)
conj:and(pleasant-13, punishment-16)
dep(punishment-16, something-17)
amod(something-17, unpleasant-18)
G[78, 80] [?#1, ?#2, ?#3, ?#4, ?#5, ?#6, ?#7, ?#8, ?#9, ?#10, ?#11, ?#12, I, It, So, There, Thou, When, action, action, also, clear, clear, consequences, consequences, do, do, do, down, ethical, ethical, ethical, ethics, events, first, form, has, however, indeed, is, it, it, itself, kind, laid, law, least, not, not, nothing, one, our, pleasant, posed, punishment, punishment, punishment, question, question, reside, reward, reward, reward, right, sense, shalt, something, something, something, terms, there, they, thought, unimportant, unpleasant, usual, we, what]
?#12-  : should  : should ->events
indeed-  : be ->?#4
?#10-and->pleasant
thought- ->first
?#9-the->form
something- ->?#10
one-poss : 's ->thought
?#2- ->first
?#6-in->reside
ethical- ->reward
laid- ->shalt
?#1-the->terms
not- ->do
?#2-of->?#11
?#3-the->reward
?#5-in->do
?#7-about->right
reside-but->?#4
do- ->laid
?#3-  : must ->pleasant
pleasant-  : that ->clear
do-if->do
?#2-an->action
down-prt : is ->laid
we- ->posed
punishment-of->?#4
posed-relcl->?#7
?#11-about->question
Thou- ->shalt
first- ->thought
it- ->thought
punishment-and->reward
There-  : must  : must ->?#4
usual- ->?#5
do-and->is
something-npmod : be ->pleasant
?#10-the->punishment
ethical- ->?#8
I- ->do
do-to->nothing
?#8-an->law
thought-  : And ->is
reward-of->?#4
there-  : For  : must  : be  : be ->something
ethics-  : that ->has
unpleasant- ->something
?#8- ->When
nothing- ->has
they-  : must ->reside
clear- ->however
it- ->do
however- ->clear
?#10- ->clear
thought- ->do
punishment-with->do
it-  : And  : is  : is  : is ->clear
also- ->clear
reward-with->do
what- ->do
not-  : be ->events
?#11-the->consequences
?#4-some->kind
?#9-of->?#8
our-poss->question
reward-and->punishment
It-  : is ->clear
question-  : must  : be ->unimportant
?#1-of->?#5
has- ->clear
is- ->laid
shalt-relcl->?#8
itself-npmod->?#6
?#12-those->consequences
So- ->unimportant
right- ->something
ethical- ->punishment
?#5-the->sense
?#6-the->action
?#7-the->question
least-  : At ->?#12
------CorefChainz
CHAIN20-["the consequences of an action" in sentence 3, "least those consequences" in sentence 4]
representative mention: "least those consequences" in sentence 4
CHAIN7-["one 's first thought" in sentence 1, "it" in sentence 1]
representative mention: "one 's first thought" in sentence 1
CHAIN26-["an action" in sentence 3, "the action itself" in sentence 6, "itself" in sentence 6]
representative mention: "the action itself" in sentence 6
CHAIN31-["ethical reward" in sentence 6, "the reward" in sentence 7]
representative mention: "ethical reward" in sentence 6
