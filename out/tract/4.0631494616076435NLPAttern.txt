 An analogy to illustrate the concept of truth: imagine a black spot on white paper: you can describe the shape of the spot by saying, for each point on the sheet, whether it is black or white. To the fact that a point is black there corresponds a positive fact, and to the fact that a point is white (not black), a negative fact. If I designate a point on the sheet (a truth-value according to Frege), then this corresponds to the supposition that is put forward for judgement, etc. etc. But in order to be able to say that a point is black or white, I must first know when a point is called black, and when white: in order to be able to say,'"p" is true (or false)', I must have determined in what circumstances I call 'p' true, and in so doing I determine the sense of the proposition. Now the point where the simile breaks down is this: we can indicate a point on the paper even if we do not know what black and white are, but if a proposition has no sense, nothing corresponds to it, since it does not designatea thing (a truth- value) which might have properties called 'false' or 'true'. The verb of a proposition is not 'is true' or 'is false', as Frege thought: rather, that which 'is true' must already contain the verb.
------CorefChainz
CHAIN33-["a point" in sentence 2, "a point" in sentence 2, "a point" in sentence 4]
representative mention: "a point" in sentence 2
CHAIN18-["the sheet" in sentence 1, "the sheet" in sentence 3]
representative mention: "the sheet" in sentence 1
CHAIN39-["white paper" in sentence 1, "the paper" in sentence 5]
representative mention: "white paper" in sentence 1
CHAIN55-["Frege" in sentence 3, "Frege" in sentence 6]
representative mention: "Frege" in sentence 3
CHAIN40-["we" in sentence 5, "we" in sentence 5]
representative mention: "we" in sentence 5
CHAIN10-["a black spot on white paper" in sentence 1, "the spot" in sentence 1, "it" in sentence 1]
representative mention: "a black spot on white paper" in sentence 1
CHAIN29-["I" in sentence 3, "I" in sentence 4, "I" in sentence 4, "I" in sentence 4, "I" in sentence 4]
representative mention: "I" in sentence 3
CHAIN45-["a proposition" in sentence 5, "it" in sentence 5, "it" in sentence 5, "a proposition" in sentence 6]
representative mention: "a proposition" in sentence 5
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, analogy-2)
det(analogy-2, An-1)
punct(analogy-2, :-9)
punct(analogy-2, .-42)
mark(illustrate-4, to-3)
det(concept-6, the-5)
case(truth-8, of-7)
punct(imagine-10, :-17)
det(spot-13, a-11)
case(paper-16, on-14)
aux(describe-20, can-19)
det(shape-22, the-21)
case(spot-25, of-23)
det(spot-25, the-24)
mark(saying-27, by-26)
punct(saying-27, ,-35)
punct(saying-27, ,-28)
case(point-31, for-29)
det(point-31, each-30)
case(sheet-34, on-32)
det(sheet-34, the-33)
cc(black-39, or-40)
cop(black-39, is-38)
mark(black-39, whether-36)
acl:to(analogy-2, illustrate-4)
dobj(illustrate-4, concept-6)
nmod:of(concept-6, truth-8)
dep(analogy-2, imagine-10)
amod(spot-13, black-12)
dobj(imagine-10, spot-13)
amod(paper-16, white-15)
nmod:on(spot-13, paper-16)
nsubj(describe-20, you-18)
parataxis(imagine-10, describe-20)
dobj(describe-20, shape-22)
nmod:of(shape-22, spot-25)
advcl:by(describe-20, saying-27)
nmod:for(saying-27, point-31)
nmod:on(point-31, sheet-34)
nsubj(black-39, it-37)
nsubj(white-41, it-37)
ccomp(saying-27, black-39)
ccomp(saying-27, white-41)
conj:or(black-39, white-41)
---
qqroot(ROOT-0, analogy-2)
det(analogy-2, An-1)
punct(analogy-2, :-9)
punct(analogy-2, .-42)
mark(illustrate-4, to-3)
det(concept-6, the-5)
case(truth-8, of-7)
punct(imagine-10, :-17)
det(spot-13, a-11)
case(paper-16, on-14)
aux(describe-20, can-19)
det(shape-22, the-21)
case(spot-25, of-23)
det(spot-25, the-24)
mark(saying-27, by-26)
punct(saying-27, ,-35)
punct(saying-27, ,-28)
case(point-31, for-29)
det(point-31, each-30)
case(sheet-34, on-32)
det(sheet-34, the-33)
cc(black-39, or-40)
cop(black-39, is-38)
mark(black-39, whether-36)
acl:to(analogy-2, illustrate-4)
dobj(illustrate-4, concept-6)
nmod:of(concept-6, truth-8)
dep(analogy-2, imagine-10)
amod(spot-13, black-12)
dobj(imagine-10, spot-13)
amod(paper-16, white-15)
nmod:on(spot-13, paper-16)
nsubj(describe-20, you-18)
parataxis(imagine-10, describe-20)
dobj(describe-20, shape-22)
nmod:of(shape-22, spot-25)
advcl:by(describe-20, saying-27)
nmod:for(saying-27, point-31)
nmod:on(point-31, sheet-34)
nsubj(black-39, it-37)
nsubj(white-41, it-37)
ccomp(saying-27, black-39)
ccomp(saying-27, white-41)
conj:or(black-39, white-41)
root(ROOT-0, fact-31)
case(fact-3, To-1)
det(fact-3, the-2)
punct(fact-3, ,-14)
det(point-6, a-5)
cop(black-8, is-7)
mark(black-8, that-4)
det(fact-13, a-11)
case(fact-18, to-16)
det(fact-18, the-17)
det(point-21, a-20)
cop(white-23, is-22)
mark(white-23, that-19)
punct(black-26, -LRB--24)
punct(black-26, -RRB--27)
cc(fact-31, and-15)
det(fact-31, a-29)
punct(fact-31, ,-28)
punct(fact-31, .-32)
nmod:to(fact-31, fact-3)
nsubj(black-8, point-6)
ccomp(fact-3, black-8)
expl(corresponds-10, there-9)
ccomp(black-8, corresponds-10)
amod(fact-13, positive-12)
dobj(corresponds-10, fact-13)
nmod:to(fact-31''', fact-18)
nsubj(white-23, point-21)
ccomp(fact-18, white-23)
neg(black-26, not-25)
dep(white-23, black-26)
amod(fact-31, negative-30)
conj:and(fact-31, fact-31''')
---
qqroot(ROOT-0, analogy-2)
det(analogy-2, An-1)
punct(analogy-2, :-9)
punct(analogy-2, .-42)
mark(illustrate-4, to-3)
det(concept-6, the-5)
case(truth-8, of-7)
punct(imagine-10, :-17)
det(spot-13, a-11)
case(paper-16, on-14)
aux(describe-20, can-19)
det(shape-22, the-21)
case(spot-25, of-23)
det(spot-25, the-24)
mark(saying-27, by-26)
punct(saying-27, ,-35)
punct(saying-27, ,-28)
case(point-31, for-29)
det(point-31, each-30)
case(sheet-34, on-32)
det(sheet-34, the-33)
cc(black-39, or-40)
cop(black-39, is-38)
mark(black-39, whether-36)
acl:to(analogy-2, illustrate-4)
dobj(illustrate-4, concept-6)
nmod:of(concept-6, truth-8)
dep(analogy-2, imagine-10)
amod(spot-13, black-12)
dobj(imagine-10, spot-13)
amod(paper-16, white-15)
nmod:on(spot-13, paper-16)
nsubj(describe-20, you-18)
parataxis(imagine-10, describe-20)
dobj(describe-20, shape-22)
nmod:of(shape-22, spot-25)
advcl:by(describe-20, saying-27)
nmod:for(saying-27, point-31)
nmod:on(point-31, sheet-34)
nsubj(black-39, it-37)
nsubj(white-41, it-37)
ccomp(saying-27, black-39)
ccomp(saying-27, white-41)
conj:or(black-39, white-41)
root(ROOT-0, fact-31)
case(fact-3, To-1)
det(fact-3, the-2)
punct(fact-3, ,-14)
det(point-6, a-5)
cop(black-8, is-7)
mark(black-8, that-4)
det(fact-13, a-11)
case(fact-18, to-16)
det(fact-18, the-17)
det(point-21, a-20)
cop(white-23, is-22)
mark(white-23, that-19)
punct(black-26, -LRB--24)
punct(black-26, -RRB--27)
cc(fact-31, and-15)
det(fact-31, a-29)
punct(fact-31, ,-28)
punct(fact-31, .-32)
nmod:to(fact-31, fact-3)
nsubj(black-8, point-6)
ccomp(fact-3, black-8)
expl(corresponds-10, there-9)
ccomp(black-8, corresponds-10)
amod(fact-13, positive-12)
dobj(corresponds-10, fact-13)
nmod:to(fact-31''', fact-18)
nsubj(white-23, point-21)
ccomp(fact-18, white-23)
neg(black-26, not-25)
dep(white-23, black-26)
amod(fact-31, negative-30)
conj:and(fact-31, fact-31''')
root(ROOT-0, corresponds-19)
mark(designate-3, If-1)
det(point-5, a-4)
case(sheet-8, on-6)
det(sheet-8, the-7)
det(truth-value-11, a-10)
punct(truth-value-11, -LRB--9)
punct(truth-value-11, -RRB--15)
mwe(according-12, to-13)
case(Frege-14, according-12)
punct(corresponds-19, ,-16)
punct(corresponds-19, .-32)
case(supposition-22, to-20)
det(supposition-22, the-21)
punct(supposition-22, ,-29)
auxpass(put-25, is-24)
case(judgement-28, for-27)
compound(etc.-31, etc.-30)
nsubj(designate-3, I-2)
advcl:if(corresponds-19, designate-3)
dobj(designate-3, point-5)
nmod:on(point-5, sheet-8)
dep(point-5, truth-value-11)
nmod:according_to(truth-value-11, Frege-14)
advmod(corresponds-19, then-17)
nsubj(corresponds-19, this-18)
nmod:to(corresponds-19, supposition-22)
nsubjpass(put-25, supposition-22)
ref(supposition-22, that-23)
acl:relcl(supposition-22, put-25)
advmod(put-25, forward-26)
nmod:for(put-25, judgement-28)
advmod(supposition-22, etc.-31)
---
qqroot(ROOT-0, analogy-2)
det(analogy-2, An-1)
punct(analogy-2, :-9)
punct(analogy-2, .-42)
mark(illustrate-4, to-3)
det(concept-6, the-5)
case(truth-8, of-7)
punct(imagine-10, :-17)
det(spot-13, a-11)
case(paper-16, on-14)
aux(describe-20, can-19)
det(shape-22, the-21)
case(spot-25, of-23)
det(spot-25, the-24)
mark(saying-27, by-26)
punct(saying-27, ,-35)
punct(saying-27, ,-28)
case(point-31, for-29)
det(point-31, each-30)
case(sheet-34, on-32)
det(sheet-34, the-33)
cc(black-39, or-40)
cop(black-39, is-38)
mark(black-39, whether-36)
acl:to(analogy-2, illustrate-4)
dobj(illustrate-4, concept-6)
nmod:of(concept-6, truth-8)
dep(analogy-2, imagine-10)
amod(spot-13, black-12)
dobj(imagine-10, spot-13)
amod(paper-16, white-15)
nmod:on(spot-13, paper-16)
nsubj(describe-20, you-18)
parataxis(imagine-10, describe-20)
dobj(describe-20, shape-22)
nmod:of(shape-22, spot-25)
advcl:by(describe-20, saying-27)
nmod:for(saying-27, point-31)
nmod:on(point-31, sheet-34)
nsubj(black-39, it-37)
nsubj(white-41, it-37)
ccomp(saying-27, black-39)
ccomp(saying-27, white-41)
conj:or(black-39, white-41)
root(ROOT-0, fact-31)
case(fact-3, To-1)
det(fact-3, the-2)
punct(fact-3, ,-14)
det(point-6, a-5)
cop(black-8, is-7)
mark(black-8, that-4)
det(fact-13, a-11)
case(fact-18, to-16)
det(fact-18, the-17)
det(point-21, a-20)
cop(white-23, is-22)
mark(white-23, that-19)
punct(black-26, -LRB--24)
punct(black-26, -RRB--27)
cc(fact-31, and-15)
det(fact-31, a-29)
punct(fact-31, ,-28)
punct(fact-31, .-32)
nmod:to(fact-31, fact-3)
nsubj(black-8, point-6)
ccomp(fact-3, black-8)
expl(corresponds-10, there-9)
ccomp(black-8, corresponds-10)
amod(fact-13, positive-12)
dobj(corresponds-10, fact-13)
nmod:to(fact-31''', fact-18)
nsubj(white-23, point-21)
ccomp(fact-18, white-23)
neg(black-26, not-25)
dep(white-23, black-26)
amod(fact-31, negative-30)
conj:and(fact-31, fact-31''')
root(ROOT-0, corresponds-19)
mark(designate-3, If-1)
det(point-5, a-4)
case(sheet-8, on-6)
det(sheet-8, the-7)
det(truth-value-11, a-10)
punct(truth-value-11, -LRB--9)
punct(truth-value-11, -RRB--15)
mwe(according-12, to-13)
case(Frege-14, according-12)
punct(corresponds-19, ,-16)
punct(corresponds-19, .-32)
case(supposition-22, to-20)
det(supposition-22, the-21)
punct(supposition-22, ,-29)
auxpass(put-25, is-24)
case(judgement-28, for-27)
compound(etc.-31, etc.-30)
nsubj(designate-3, I-2)
advcl:if(corresponds-19, designate-3)
dobj(designate-3, point-5)
nmod:on(point-5, sheet-8)
dep(point-5, truth-value-11)
nmod:according_to(truth-value-11, Frege-14)
advmod(corresponds-19, then-17)
nsubj(corresponds-19, this-18)
nmod:to(corresponds-19, supposition-22)
nsubjpass(put-25, supposition-22)
ref(supposition-22, that-23)
acl:relcl(supposition-22, put-25)
advmod(put-25, forward-26)
nmod:for(put-25, judgement-28)
advmod(supposition-22, etc.-31)
root(ROOT-0, determined-55)
mwe(in-2, order-3)
cop(able-6, be-5)
mark(able-6, in-2)
mark(able-6, to-4)
mark(say-8, to-7)
det(point-11, a-10)
cc(black-13, or-14)
cop(black-13, is-12)
mark(black-13, that-9)
aux(know-20, must-18)
cc(know-20, But-1)
punct(know-20, ,-16)
det(point-23, a-22)
auxpass(called-25, is-24)
cc(called-25, and-28)
punct(called-25, ,-27)
mwe(in-32, order-33)
cop(able-36, be-35)
mark(able-36, in-32)
mark(able-36, to-34)
mark(say-38, to-37)
cop(true-45, is-44)
punct(true-45, ``-41)
punct(true-45, ''-43)
punct(true-45, :-31)
punct(true-45, '-50)
punct(true-45, ,-39)
punct(true-45, '-40)
cc(false-48, or-47)
punct(false-48, -LRB--46)
punct(false-48, -RRB--49)
aux(determined-55, must-53)
aux(determined-55, have-54)
punct(determined-55, .-77)
punct(determined-55, ,-51)
case(circumstances-58, in-56)
det(circumstances-58, what-57)
cc(call-60, and-66)
punct(call-60, ,-65)
punct(true-64, `-61)
punct(true-64, '-63)
mark(doing-69, in-67)
det(sense-73, the-72)
case(proposition-76, of-74)
det(proposition-76, the-75)
advcl:in_order(know-20, able-6)
xcomp(able-6, say-8)
nsubj(black-13, point-11)
nsubj(white-15, point-11)
ccomp(say-8, black-13)
ccomp(say-8, white-15)
conj:or(black-13, white-15)
nsubj(know-20, I-17)
advmod(know-20, first-19)
ccomp(determined-55, know-20)
advmod(called-25, when-21)
nsubjpass(called-25, point-23)
advcl(know-20, called-25)
xcomp(called-25, black-26)
advmod(white-30, when-29)
dep(true-45, white-30)
advcl:in_order(true-45, able-36)
xcomp(able-36, say-38)
nsubj(true-45, p-42)
advcl(know-20, true-45)
conj:and(called-25, true-45)
dep(true-45, false-48)
nsubj(determined-55, I-52)
nmod:in(call-60, circumstances-58)
nsubj(call-60, I-59)
nsubj(doing-69, I-59)
ccomp(determined-55, call-60)
dep(true-64, p-62)
xcomp(call-60, true-64)
advmod(doing-69, so-68)
ccomp(determined-55, doing-69)
conj:and(call-60, doing-69)
nsubj(determine-71, I-70)
ccomp(doing-69, determine-71)
dobj(determine-71, sense-73)
nmod:of(sense-73, proposition-76)
---
qqroot(ROOT-0, analogy-2)
det(analogy-2, An-1)
punct(analogy-2, :-9)
punct(analogy-2, .-42)
mark(illustrate-4, to-3)
det(concept-6, the-5)
case(truth-8, of-7)
punct(imagine-10, :-17)
det(spot-13, a-11)
case(paper-16, on-14)
aux(describe-20, can-19)
det(shape-22, the-21)
case(spot-25, of-23)
det(spot-25, the-24)
mark(saying-27, by-26)
punct(saying-27, ,-35)
punct(saying-27, ,-28)
case(point-31, for-29)
det(point-31, each-30)
case(sheet-34, on-32)
det(sheet-34, the-33)
cc(black-39, or-40)
cop(black-39, is-38)
mark(black-39, whether-36)
acl:to(analogy-2, illustrate-4)
dobj(illustrate-4, concept-6)
nmod:of(concept-6, truth-8)
dep(analogy-2, imagine-10)
amod(spot-13, black-12)
dobj(imagine-10, spot-13)
amod(paper-16, white-15)
nmod:on(spot-13, paper-16)
nsubj(describe-20, you-18)
parataxis(imagine-10, describe-20)
dobj(describe-20, shape-22)
nmod:of(shape-22, spot-25)
advcl:by(describe-20, saying-27)
nmod:for(saying-27, point-31)
nmod:on(point-31, sheet-34)
nsubj(black-39, it-37)
nsubj(white-41, it-37)
ccomp(saying-27, black-39)
ccomp(saying-27, white-41)
conj:or(black-39, white-41)
root(ROOT-0, fact-31)
case(fact-3, To-1)
det(fact-3, the-2)
punct(fact-3, ,-14)
det(point-6, a-5)
cop(black-8, is-7)
mark(black-8, that-4)
det(fact-13, a-11)
case(fact-18, to-16)
det(fact-18, the-17)
det(point-21, a-20)
cop(white-23, is-22)
mark(white-23, that-19)
punct(black-26, -LRB--24)
punct(black-26, -RRB--27)
cc(fact-31, and-15)
det(fact-31, a-29)
punct(fact-31, ,-28)
punct(fact-31, .-32)
nmod:to(fact-31, fact-3)
nsubj(black-8, point-6)
ccomp(fact-3, black-8)
expl(corresponds-10, there-9)
ccomp(black-8, corresponds-10)
amod(fact-13, positive-12)
dobj(corresponds-10, fact-13)
nmod:to(fact-31''', fact-18)
nsubj(white-23, point-21)
ccomp(fact-18, white-23)
neg(black-26, not-25)
dep(white-23, black-26)
amod(fact-31, negative-30)
conj:and(fact-31, fact-31''')
root(ROOT-0, corresponds-19)
mark(designate-3, If-1)
det(point-5, a-4)
case(sheet-8, on-6)
det(sheet-8, the-7)
det(truth-value-11, a-10)
punct(truth-value-11, -LRB--9)
punct(truth-value-11, -RRB--15)
mwe(according-12, to-13)
case(Frege-14, according-12)
punct(corresponds-19, ,-16)
punct(corresponds-19, .-32)
case(supposition-22, to-20)
det(supposition-22, the-21)
punct(supposition-22, ,-29)
auxpass(put-25, is-24)
case(judgement-28, for-27)
compound(etc.-31, etc.-30)
nsubj(designate-3, I-2)
advcl:if(corresponds-19, designate-3)
dobj(designate-3, point-5)
nmod:on(point-5, sheet-8)
dep(point-5, truth-value-11)
nmod:according_to(truth-value-11, Frege-14)
advmod(corresponds-19, then-17)
nsubj(corresponds-19, this-18)
nmod:to(corresponds-19, supposition-22)
nsubjpass(put-25, supposition-22)
ref(supposition-22, that-23)
acl:relcl(supposition-22, put-25)
advmod(put-25, forward-26)
nmod:for(put-25, judgement-28)
advmod(supposition-22, etc.-31)
root(ROOT-0, determined-55)
mwe(in-2, order-3)
cop(able-6, be-5)
mark(able-6, in-2)
mark(able-6, to-4)
mark(say-8, to-7)
det(point-11, a-10)
cc(black-13, or-14)
cop(black-13, is-12)
mark(black-13, that-9)
aux(know-20, must-18)
cc(know-20, But-1)
punct(know-20, ,-16)
det(point-23, a-22)
auxpass(called-25, is-24)
cc(called-25, and-28)
punct(called-25, ,-27)
mwe(in-32, order-33)
cop(able-36, be-35)
mark(able-36, in-32)
mark(able-36, to-34)
mark(say-38, to-37)
cop(true-45, is-44)
punct(true-45, ``-41)
punct(true-45, ''-43)
punct(true-45, :-31)
punct(true-45, '-50)
punct(true-45, ,-39)
punct(true-45, '-40)
cc(false-48, or-47)
punct(false-48, -LRB--46)
punct(false-48, -RRB--49)
aux(determined-55, must-53)
aux(determined-55, have-54)
punct(determined-55, .-77)
punct(determined-55, ,-51)
case(circumstances-58, in-56)
det(circumstances-58, what-57)
cc(call-60, and-66)
punct(call-60, ,-65)
punct(true-64, `-61)
punct(true-64, '-63)
mark(doing-69, in-67)
det(sense-73, the-72)
case(proposition-76, of-74)
det(proposition-76, the-75)
advcl:in_order(know-20, able-6)
xcomp(able-6, say-8)
nsubj(black-13, point-11)
nsubj(white-15, point-11)
ccomp(say-8, black-13)
ccomp(say-8, white-15)
conj:or(black-13, white-15)
nsubj(know-20, I-17)
advmod(know-20, first-19)
ccomp(determined-55, know-20)
advmod(called-25, when-21)
nsubjpass(called-25, point-23)
advcl(know-20, called-25)
xcomp(called-25, black-26)
advmod(white-30, when-29)
dep(true-45, white-30)
advcl:in_order(true-45, able-36)
xcomp(able-36, say-38)
nsubj(true-45, p-42)
advcl(know-20, true-45)
conj:and(called-25, true-45)
dep(true-45, false-48)
nsubj(determined-55, I-52)
nmod:in(call-60, circumstances-58)
nsubj(call-60, I-59)
nsubj(doing-69, I-59)
ccomp(determined-55, call-60)
dep(true-64, p-62)
xcomp(call-60, true-64)
advmod(doing-69, so-68)
ccomp(determined-55, doing-69)
conj:and(call-60, doing-69)
nsubj(determine-71, I-70)
ccomp(doing-69, determine-71)
dobj(determine-71, sense-73)
nmod:of(sense-73, proposition-76)
root(ROOT-0, indicate-14)
det(point-3, the-2)
det(simile-6, the-5)
cop(this-10, is-9)
aux(indicate-14, can-13)
punct(indicate-14, .-69)
punct(indicate-14, :-11)
det(point-16, a-15)
case(paper-19, on-17)
det(paper-19, the-18)
aux(know-25, do-23)
cc(know-25, but-32)
mark(know-25, if-21)
punct(know-25, ,-44)
punct(know-25, ,-31)
cc(black-27, and-28)
det(proposition-35, a-34)
mark(has-36, if-33)
punct(corresponds-41, ,-39)
case(it-43, to-42)
aux(designatea-49, does-47)
mark(designatea-49, since-45)
det(truth-53, a-52)
punct(truth-53, -LRB--51)
punct(truth-53, --54)
punct(truth-53, -RRB--56)
aux(have-59, might-58)
cc(properties-60, or-65)
punct(false-63, `-62)
punct(false-63, '-64)
punct(true-67, `-66)
punct(true-67, '-68)
advmod(this-10, Now-1)
nsubj(this-10, point-3)
advmod(breaks-7, where-4)
nsubj(breaks-7, simile-6)
acl:relcl(point-3, breaks-7)
advmod(breaks-7, down-8)
dep(indicate-14, this-10)
nsubj(indicate-14, we-12)
dobj(indicate-14, point-16)
nmod:on(point-16, paper-19)
advmod(know-25, even-20)
nsubj(know-25, we-22)
neg(know-25, not-24)
acl:if(point-16, know-25)
dobj(are-30, what-26)
nsubj(are-30, black-27)
conj:and(black-27, white-29)
nsubj(are-30, white-29)
ccomp(know-25, are-30)
nsubj(has-36, proposition-35)
advcl:if(corresponds-41, has-36)
neg(sense-38, no-37)
dobj(has-36, sense-38)
nsubj(corresponds-41, nothing-40)
acl:if(point-16, corresponds-41)
conj:but(know-25, corresponds-41)
nmod:to(corresponds-41, it-43)
nsubj(designatea-49, it-46)
neg(designatea-49, not-48)
advcl:since(know-25, designatea-49)
dobj(designatea-49, thing-50)
nsubj(have-59, thing-50)
dep(thing-50, truth-53)
dep(truth-53, value-55)
ref(thing-50, which-57)
acl:relcl(thing-50, have-59)
dobj(have-59, properties-60)
acl(properties-60, called-61)
xcomp(called-61, false-63)
dobj(have-59, true-67)
conj:or(properties-60, true-67)
---
qqroot(ROOT-0, analogy-2)
det(analogy-2, An-1)
punct(analogy-2, :-9)
punct(analogy-2, .-42)
mark(illustrate-4, to-3)
det(concept-6, the-5)
case(truth-8, of-7)
punct(imagine-10, :-17)
det(spot-13, a-11)
case(paper-16, on-14)
aux(describe-20, can-19)
det(shape-22, the-21)
case(spot-25, of-23)
det(spot-25, the-24)
mark(saying-27, by-26)
punct(saying-27, ,-35)
punct(saying-27, ,-28)
case(point-31, for-29)
det(point-31, each-30)
case(sheet-34, on-32)
det(sheet-34, the-33)
cc(black-39, or-40)
cop(black-39, is-38)
mark(black-39, whether-36)
acl:to(analogy-2, illustrate-4)
dobj(illustrate-4, concept-6)
nmod:of(concept-6, truth-8)
dep(analogy-2, imagine-10)
amod(spot-13, black-12)
dobj(imagine-10, spot-13)
amod(paper-16, white-15)
nmod:on(spot-13, paper-16)
nsubj(describe-20, you-18)
parataxis(imagine-10, describe-20)
dobj(describe-20, shape-22)
nmod:of(shape-22, spot-25)
advcl:by(describe-20, saying-27)
nmod:for(saying-27, point-31)
nmod:on(point-31, sheet-34)
nsubj(black-39, it-37)
nsubj(white-41, it-37)
ccomp(saying-27, black-39)
ccomp(saying-27, white-41)
conj:or(black-39, white-41)
root(ROOT-0, fact-31)
case(fact-3, To-1)
det(fact-3, the-2)
punct(fact-3, ,-14)
det(point-6, a-5)
cop(black-8, is-7)
mark(black-8, that-4)
det(fact-13, a-11)
case(fact-18, to-16)
det(fact-18, the-17)
det(point-21, a-20)
cop(white-23, is-22)
mark(white-23, that-19)
punct(black-26, -LRB--24)
punct(black-26, -RRB--27)
cc(fact-31, and-15)
det(fact-31, a-29)
punct(fact-31, ,-28)
punct(fact-31, .-32)
nmod:to(fact-31, fact-3)
nsubj(black-8, point-6)
ccomp(fact-3, black-8)
expl(corresponds-10, there-9)
ccomp(black-8, corresponds-10)
amod(fact-13, positive-12)
dobj(corresponds-10, fact-13)
nmod:to(fact-31''', fact-18)
nsubj(white-23, point-21)
ccomp(fact-18, white-23)
neg(black-26, not-25)
dep(white-23, black-26)
amod(fact-31, negative-30)
conj:and(fact-31, fact-31''')
root(ROOT-0, corresponds-19)
mark(designate-3, If-1)
det(point-5, a-4)
case(sheet-8, on-6)
det(sheet-8, the-7)
det(truth-value-11, a-10)
punct(truth-value-11, -LRB--9)
punct(truth-value-11, -RRB--15)
mwe(according-12, to-13)
case(Frege-14, according-12)
punct(corresponds-19, ,-16)
punct(corresponds-19, .-32)
case(supposition-22, to-20)
det(supposition-22, the-21)
punct(supposition-22, ,-29)
auxpass(put-25, is-24)
case(judgement-28, for-27)
compound(etc.-31, etc.-30)
nsubj(designate-3, I-2)
advcl:if(corresponds-19, designate-3)
dobj(designate-3, point-5)
nmod:on(point-5, sheet-8)
dep(point-5, truth-value-11)
nmod:according_to(truth-value-11, Frege-14)
advmod(corresponds-19, then-17)
nsubj(corresponds-19, this-18)
nmod:to(corresponds-19, supposition-22)
nsubjpass(put-25, supposition-22)
ref(supposition-22, that-23)
acl:relcl(supposition-22, put-25)
advmod(put-25, forward-26)
nmod:for(put-25, judgement-28)
advmod(supposition-22, etc.-31)
root(ROOT-0, determined-55)
mwe(in-2, order-3)
cop(able-6, be-5)
mark(able-6, in-2)
mark(able-6, to-4)
mark(say-8, to-7)
det(point-11, a-10)
cc(black-13, or-14)
cop(black-13, is-12)
mark(black-13, that-9)
aux(know-20, must-18)
cc(know-20, But-1)
punct(know-20, ,-16)
det(point-23, a-22)
auxpass(called-25, is-24)
cc(called-25, and-28)
punct(called-25, ,-27)
mwe(in-32, order-33)
cop(able-36, be-35)
mark(able-36, in-32)
mark(able-36, to-34)
mark(say-38, to-37)
cop(true-45, is-44)
punct(true-45, ``-41)
punct(true-45, ''-43)
punct(true-45, :-31)
punct(true-45, '-50)
punct(true-45, ,-39)
punct(true-45, '-40)
cc(false-48, or-47)
punct(false-48, -LRB--46)
punct(false-48, -RRB--49)
aux(determined-55, must-53)
aux(determined-55, have-54)
punct(determined-55, .-77)
punct(determined-55, ,-51)
case(circumstances-58, in-56)
det(circumstances-58, what-57)
cc(call-60, and-66)
punct(call-60, ,-65)
punct(true-64, `-61)
punct(true-64, '-63)
mark(doing-69, in-67)
det(sense-73, the-72)
case(proposition-76, of-74)
det(proposition-76, the-75)
advcl:in_order(know-20, able-6)
xcomp(able-6, say-8)
nsubj(black-13, point-11)
nsubj(white-15, point-11)
ccomp(say-8, black-13)
ccomp(say-8, white-15)
conj:or(black-13, white-15)
nsubj(know-20, I-17)
advmod(know-20, first-19)
ccomp(determined-55, know-20)
advmod(called-25, when-21)
nsubjpass(called-25, point-23)
advcl(know-20, called-25)
xcomp(called-25, black-26)
advmod(white-30, when-29)
dep(true-45, white-30)
advcl:in_order(true-45, able-36)
xcomp(able-36, say-38)
nsubj(true-45, p-42)
advcl(know-20, true-45)
conj:and(called-25, true-45)
dep(true-45, false-48)
nsubj(determined-55, I-52)
nmod:in(call-60, circumstances-58)
nsubj(call-60, I-59)
nsubj(doing-69, I-59)
ccomp(determined-55, call-60)
dep(true-64, p-62)
xcomp(call-60, true-64)
advmod(doing-69, so-68)
ccomp(determined-55, doing-69)
conj:and(call-60, doing-69)
nsubj(determine-71, I-70)
ccomp(doing-69, determine-71)
dobj(determine-71, sense-73)
nmod:of(sense-73, proposition-76)
root(ROOT-0, indicate-14)
det(point-3, the-2)
det(simile-6, the-5)
cop(this-10, is-9)
aux(indicate-14, can-13)
punct(indicate-14, .-69)
punct(indicate-14, :-11)
det(point-16, a-15)
case(paper-19, on-17)
det(paper-19, the-18)
aux(know-25, do-23)
cc(know-25, but-32)
mark(know-25, if-21)
punct(know-25, ,-44)
punct(know-25, ,-31)
cc(black-27, and-28)
det(proposition-35, a-34)
mark(has-36, if-33)
punct(corresponds-41, ,-39)
case(it-43, to-42)
aux(designatea-49, does-47)
mark(designatea-49, since-45)
det(truth-53, a-52)
punct(truth-53, -LRB--51)
punct(truth-53, --54)
punct(truth-53, -RRB--56)
aux(have-59, might-58)
cc(properties-60, or-65)
punct(false-63, `-62)
punct(false-63, '-64)
punct(true-67, `-66)
punct(true-67, '-68)
advmod(this-10, Now-1)
nsubj(this-10, point-3)
advmod(breaks-7, where-4)
nsubj(breaks-7, simile-6)
acl:relcl(point-3, breaks-7)
advmod(breaks-7, down-8)
dep(indicate-14, this-10)
nsubj(indicate-14, we-12)
dobj(indicate-14, point-16)
nmod:on(point-16, paper-19)
advmod(know-25, even-20)
nsubj(know-25, we-22)
neg(know-25, not-24)
acl:if(point-16, know-25)
dobj(are-30, what-26)
nsubj(are-30, black-27)
conj:and(black-27, white-29)
nsubj(are-30, white-29)
ccomp(know-25, are-30)
nsubj(has-36, proposition-35)
advcl:if(corresponds-41, has-36)
neg(sense-38, no-37)
dobj(has-36, sense-38)
nsubj(corresponds-41, nothing-40)
acl:if(point-16, corresponds-41)
conj:but(know-25, corresponds-41)
nmod:to(corresponds-41, it-43)
nsubj(designatea-49, it-46)
neg(designatea-49, not-48)
advcl:since(know-25, designatea-49)
dobj(designatea-49, thing-50)
nsubj(have-59, thing-50)
dep(thing-50, truth-53)
dep(truth-53, value-55)
ref(thing-50, which-57)
acl:relcl(thing-50, have-59)
dobj(have-59, properties-60)
acl(properties-60, called-61)
xcomp(called-61, false-63)
dobj(have-59, true-67)
conj:or(properties-60, true-67)
root(ROOT-0, true-10)
det(verb-2, The-1)
case(proposition-5, of-3)
det(proposition-5, a-4)
cc(true-10, or-12)
cop(true-10, is-6)
cop(true-10, is-9)
punct(true-10, ,-17)
punct(true-10, .-35)
punct(true-10, `-8)
punct(true-10, '-11)
cop(false-15, is-14)
punct(false-15, '-16)
punct(false-15, `-13)
mark(thought-20, as-18)
punct(thought-20, :-21)
cop(true-28, is-27)
punct(true-28, `-26)
punct(true-28, '-29)
aux(contain-32, must-30)
mark(contain-32, that-24)
punct(contain-32, ,-23)
det(verb-34, the-33)
nsubj(true-10, verb-2)
nsubj(false-15, verb-2)
nmod:of(verb-2, proposition-5)
neg(true-10, not-7)
conj:or(true-10, false-15)
nsubj(thought-20, Frege-19)
advcl:as(true-10, thought-20)
advmod(contain-32, rather-22)
nsubj(true-28, which-25)
csubj(contain-32, true-28)
advmod(contain-32, already-31)
parataxis(thought-20, contain-32)
dobj(contain-32, verb-34)
G[165, 174] [?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13, ?14, ?15, ?16, ?17, ?18, ?19, ?20, ?21, ?22, ?23, ?24, ?25, ?26, ?27, ?28, ?29, ?30, ?31, Frege19, Frege14, I2, I59, I52, I70, I17, Now1, able6, able36, according to12, already31, analogy2147483647, are30, black27, black26, black12, black13, black26, black39, black8, breaks7, call60, called25, called61, circumstances2147483647, concept2147483647, contain32, corresponds10, corresponds41, corresponds19, describe20, designate3, designatea49, determine71, determined55, doing69, down8, etc. etc.31, even20, fact2147483647, fact2147483647, fact2147483647, fact2147483647, false63, false48, false15, first19, forward26, has36, have59, illustrate4, imagine10, in order32, in order2, indicate14, it43, it37, it46, judgement28, know25, know20, negative30, no37, not25, not7, not48, not24, nothing40, p42, p62, paper16, paper2147483647, point2147483647, point2147483647, point2147483647, point2147483647, point2147483647, point2147483647, point2147483647, point2147483647, positive12, properties60, proposition2147483647, proposition2147483647, proposition2147483647, put25, rather22, say38, say8, saying27, sense38, sense2147483647, shape2147483647, sheet2147483647, sheet2147483647, simile2147483647, so68, spot2147483647, spot2147483647, supposition2147483647, that23, then17, there9, thing50, this10, this18, thought20, true45, true10, true67, true64, true28, truth2147483647, truth8, truth-value2147483647, value55, verb2147483647, verb2147483647, we12, we22, what26, when29, when21, where4, which25, which57, white15, white41, white30, white29, white15, white23, you18]
p42-  : is ->true45
illustrate4-to->?3
?21-each->point2147483647
?12-a->point2147483647
?22-the->point2147483647
able6-in_order : But ->know20
true67- ->have59
it43- ->?16
false15-or : is ->true10
corresponds41-but->know25
?18-the->supposition2147483647
?26-a->point2147483647
which57- ->thing50
?1- ->contain32
?24- ->imagine10
?30-The->verb2147483647
true67-or->properties60
saying27-by->describe20
?1-the->verb2147483647
contain32- ->thought20
Frege19- ->paper16
false48-  : or ->true45
?5- ->designate3
truth8-of->?29
we22-  : do  : do ->know25
white23-  : that ->?31
white41- ->saying27
?14-the->proposition2147483647
I70- ->determine71
?2-of->?7
say8-  : in order  : to  : be ->able6
?7-the->shape2147483647
?14-of->?13
even20- ->know25
not48- ->designatea49
?13-the->sense2147483647
first19- ->know20
know20- ->determined55
white29- ->are30
white15- ->paper16
so68-  : in ->doing69
?2-the->spot2147483647
I52-  : must  : have ->determined55
designate3-if->corresponds19
?16- ->has36
?23-to->?8
imagine10- ->?3
value55- ->?10
black39- ->saying27
?2- ->?6
?9- ->?5
black13-  : that ->say8
true28- ->contain32
?5-a->point2147483647
?27-on->?26
?10- ->thing50
doing69-and->call60
when29- ->white30
I59- ->doing69
?8-a->fact2147483647
?17-a->proposition2147483647
describe20- ->imagine10
able36-in_order->true45
what26- ->are30
?22- ->this10
breaks7-relcl->?22
white29-and->black27
white15- ->say8
call60- ->determined55
?4-on->?5
are30- ->know25
?6-a->fact2147483647
?21-for->saying27
Now1- ->this10
called61- ->properties60
?15-a->point2147483647
not25- ->black26
?15-  : is ->black13
?25- ->breaks7
there9- ->corresponds10
Frege19- ->thought20
I2-  : If ->designate3
no37- ->?6
?11-  : is ->black8
it46- ->?16
it37-  : whether  : is ->black39
?24-a->spot2147483647
no37- ->sense38
?31-to : and ->?8
?26- ->indicate14
has36-if->corresponds41
when21- ->called25
say38-  : to  : in order  : be ->able36
?4-the->sheet2147483647
?18- ->put25
corresponds41-if->?26
thing50- ->have59
etc. etc.31- ->?18
determine71- ->doing69
know25-if->?26
?10-a->truth2147483647
paper16-on->?24
white15-or->black13
I59- ->call60
Frege14-according_to : according to ->?9
?28-what->circumstances2147483647
this10-  : is ->indicate14
?18-to->corresponds19
forward26- ->put25
put25-relcl : is  : is  : is ->?18
?29- ->illustrate4
?12-  : is ->called25
?28-in->call60
down8- ->breaks7
then17- ->corresponds19
doing69- ->determined55
nothing40- ->corresponds41
?17-of->?30
?9-a->truth-value2147483647
designatea49-since->know25
called25- ->know20
corresponds10- ->black8
thing50- ->designatea49
rather22-  : that ->contain32
?29-the->concept2147483647
?13- ->determine71
?30- ->true10
which25-  : is ->true28
not24- ->know25
properties60-  : might ->have59
white30- ->true45
?15- ->white15
?19-the->sheet2147483647
we12-  : can ->indicate14
black12- ->?24
?3-An->analogy2147483647
that23- ->?18
already31-  : must ->contain32
?30- ->false15
true64- ->call60
I17-  : must  : must ->know20
?31-the->fact2147483647
judgement28-for->put25
?20-a->point2147483647
?19-on->?21
p62- ->true64
?20-  : is ->white23
?23-the->fact2147483647
have59-relcl->thing50
true45-and->called25
not7-  : is  : is ->true10
?11-a->point2147483647
sense38- ->has36
?16-a->proposition2147483647
?6- ->corresponds10
negative30- ->?8
this18- ->corresponds19
false63- ->called61
?7- ->describe20
black26- ->white23
where4- ->breaks7
black27- ->are30
it37- ->white41
?27-the->paper2147483647
thought20-as->true10
true45- ->know20
it46-  : does  : does ->designatea49
it43-to->corresponds41
positive12- ->?6
black26- ->called25
you18-  : can ->describe20
?25-the->simile2147483647
white41-or->black39
black8-  : To  : that ->?23
------CorefChainz
CHAIN33-["a point" in sentence 2, "a point" in sentence 2, "a point" in sentence 4]
representative mention: "a point" in sentence 2
CHAIN18-["the sheet" in sentence 1, "the sheet" in sentence 3]
representative mention: "the sheet" in sentence 1
CHAIN39-["white paper" in sentence 1, "the paper" in sentence 5]
representative mention: "white paper" in sentence 1
CHAIN55-["Frege" in sentence 3, "Frege" in sentence 6]
representative mention: "Frege" in sentence 3
CHAIN40-["we" in sentence 5, "we" in sentence 5]
representative mention: "we" in sentence 5
CHAIN10-["a black spot on white paper" in sentence 1, "the spot" in sentence 1, "it" in sentence 1]
representative mention: "a black spot on white paper" in sentence 1
CHAIN29-["I" in sentence 3, "I" in sentence 4, "I" in sentence 4, "I" in sentence 4, "I" in sentence 4]
representative mention: "I" in sentence 3
CHAIN45-["a proposition" in sentence 5, "it" in sentence 5, "it" in sentence 5, "a proposition" in sentence 6]
representative mention: "a proposition" in sentence 5
