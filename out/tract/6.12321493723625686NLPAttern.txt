 The general validity of logic might be called essential, in contrast with the accidental general validity of such propositions as 'All men are mortal'. Propositions like Russell's 'axiom of reducibility' are not logical propositions, and this explains our feeling that, even if they were true, their truth could only be the result of a fortunate accident.
------CorefChainz
CHAIN16-["All men" in sentence 1, "they" in sentence 2, "their" in sentence 2]
representative mention: "All men" in sentence 1
CHAIN12-["The general validity of logic" in sentence 1, "the accidental general validity of such propositions as ` All men are mortal '" in sentence 1, "this" in sentence 2]
representative mention: "the accidental general validity of such propositions as ` All men are mortal '" in sentence 1
The-DT 
general-JJ 
validity-NN 
of-IN 
logic-NN 
might-MD 
be-VB 
called-VBN 
essential-JJ 
,-, 
in-IN 
contrast-NN 
with-IN 
the-DT 
accidental-JJ 
general-JJ 
validity-NN 
of-IN 
such-JJ 
propositions-NNS 
as-IN 
`-`` 
All-DT 
men-NNS 
are-VBP 
mortal-JJ 
'-'' 
.-. 
Propositions-NNP 
like-IN 
Russell-NNP 
's-POS 
`-`` 
axiom-NN 
of-IN 
reducibility-NN 
'-'' 
are-VBP 
not-RB 
logical-JJ 
propositions-NNS 
,-, 
and-CC 
this-DT 
explains-VBZ 
our-PRP$ 
feeling-NN 
that-IN 
,-, 
even-RB 
if-IN 
they-PRP 
were-VBD 
true-JJ 
,-, 
their-PRP$ 
truth-NN 
could-MD 
only-RB 
be-VB 
the-DT 
result-NN 
of-IN 
a-DT 
fortunate-JJ 
accident-NN 
.-. 
ROOT 	-> S 	-> S 	-> NP 	-> NP 	-> DT 	-> The
	 	-> JJ 	-> general
	 	-> NN 	-> validity
		 	-> PP 	-> IN 	-> of
	 	-> NP 	-> NN 	-> logic
				 	-> VP 	-> MD 	-> might
	 	-> VP 	-> VB 	-> be
	 	-> VP 	-> VBN 	-> called
	 	-> ADJP 	-> JJ 	-> essential
		 	-> , 	-> ,
	 	-> PP 	-> IN 	-> in
	 	-> NP 	-> NP 	-> NN 	-> contrast
		 	-> PP 	-> IN 	-> with
	 	-> NP 	-> NP 	-> DT 	-> the
	 	-> JJ 	-> accidental
	 	-> JJ 	-> general
	 	-> NN 	-> validity
		 	-> PP 	-> IN 	-> of
	 	-> NP 	-> NP 	-> NP 	-> NP 	-> JJ 	-> such
	 	-> NNS 	-> propositions
		 	-> PP 	-> IN 	-> as
	 	-> `` 	-> `
	 	-> NP 	-> NP 	-> DT 	-> All
	 	-> NNS 	-> men
		 	-> SBAR 	-> S 	-> VP 	-> VBP 	-> are
	 	-> ADJP 	-> JJ 	-> mortal
						 	-> '' 	-> '
			 	-> . 	-> .
	 	-> NP 	-> NP 	-> NNP 	-> Propositions
		 	-> PP 	-> IN 	-> like
	 	-> NP 	-> NP 	-> NNP 	-> Russell
	 	-> POS 	-> 's
		 	-> `` 	-> `
	 	-> NP 	-> NP 	-> NN 	-> axiom
		 	-> PP 	-> IN 	-> of
	 	-> NP 	-> NN 	-> reducibility
				 	-> '' 	-> '
					 	-> VP 	-> VBP 	-> are
	 	-> RB 	-> not
	 	-> NP 	-> JJ 	-> logical
	 	-> NNS 	-> propositions
													 	-> , 	-> ,
	 	-> CC 	-> and
	 	-> S 	-> NP 	-> DT 	-> this
		 	-> VP 	-> VBZ 	-> explains
	 	-> NP 	-> PRP$ 	-> our
	 	-> NN 	-> feeling
		 	-> SBAR 	-> IN 	-> that
	 	-> , 	-> ,
	 	-> S 	-> SBAR 	-> RB 	-> even
	 	-> IN 	-> if
	 	-> S 	-> NP 	-> PRP 	-> they
		 	-> VP 	-> VBD 	-> were
	 	-> ADJP 	-> JJ 	-> true
					 	-> , 	-> ,
	 	-> NP 	-> PRP$ 	-> their
	 	-> NN 	-> truth
		 	-> VP 	-> MD 	-> could
	 	-> ADVP 	-> RB 	-> only
		 	-> VP 	-> VB 	-> be
	 	-> NP 	-> NP 	-> DT 	-> the
	 	-> NN 	-> result
		 	-> PP 	-> IN 	-> of
	 	-> NP 	-> DT 	-> a
	 	-> JJ 	-> fortunate
	 	-> NN 	-> accident
										 	-> . 	-> .
			
Dependensee repr
det(validity-3, The-1)
amod(validity-3, general-2)
nsubjpass(called-8, validity-3)
case(logic-5, of-4)
nmod:of(validity-3, logic-5)
aux(called-8, might-6)
auxpass(called-8, be-7)
root(ROOT-0, called-8)
xcomp(called-8, essential-9)
case(contrast-12, in-11)
nmod:in(called-8, contrast-12)
case(validity-17, with-13)
det(validity-17, the-14)
amod(validity-17, accidental-15)
amod(validity-17, general-16)
nmod:with(contrast-12, validity-17)
case(propositions-20, of-18)
amod(propositions-20, such-19)
nmod:of(validity-17, propositions-20)
case(men-24, as-21)
det(men-24, All-23)
nmod:as(propositions-20, men-24)
cop(mortal-26, are-25)
acl:relcl(men-24, mortal-26)
dep(propositions-20, Propositions-29)
case(Russell-31, like-30)
nmod:like(Propositions-29, Russell-31)
case(Russell-31, 's-32)
dep(Russell-31, axiom-34)
case(reducibility-36, of-35)
nmod:of(axiom-34, reducibility-36)
cop(propositions-41, are-38)
neg(propositions-41, not-39)
amod(propositions-41, logical-40)
dep(propositions-20, propositions-41)
cc(called-8, and-43)
nsubj(explains-45, this-44)
conj:and(called-8, explains-45)
nmod:poss(feeling-47, our-46)
dobj(explains-45, feeling-47)
mark(result-62, that-48)
advmod(true-54, even-50)
mark(true-54, if-51)
nsubj(true-54, they-52)
cop(true-54, were-53)
advcl(result-62, true-54)
nmod:poss(truth-57, their-56)
nsubj(result-62, truth-57)
aux(result-62, could-58)
advmod(result-62, only-59)
cop(result-62, be-60)
det(result-62, the-61)
ccomp(explains-45, result-62)
case(accident-66, of-63)
det(accident-66, a-64)
amod(accident-66, fortunate-65)
nmod:of(result-62, accident-66)
---
Enhanced PLUS PLUS dependencies
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, called-8)
det(validity-3, The-1)
case(logic-5, of-4)
aux(called-8, might-6)
auxpass(called-8, be-7)
punct(called-8, ,-10)
punct(called-8, .-28)
case(contrast-12, in-11)
case(validity-17, with-13)
det(validity-17, the-14)
case(propositions-20, of-18)
det(men-24, All-23)
case(mortal-26, as-21)
cop(mortal-26, are-25)
punct(mortal-26, `-22)
punct(mortal-26, '-27)
amod(validity-3, general-2)
nsubjpass(called-8, validity-3)
nmod:of(validity-3, logic-5)
xcomp(called-8, essential-9)
nmod:in(called-8, contrast-12)
amod(validity-17, accidental-15)
amod(validity-17, general-16)
nmod:with(contrast-12, validity-17)
amod(propositions-20, such-19)
nmod:of(validity-17, propositions-20)
nsubj(mortal-26, men-24)
acl:as(propositions-20, mortal-26)
---
qqroot(ROOT-0, called-8)
det(validity-3, The-1)
case(logic-5, of-4)
aux(called-8, might-6)
auxpass(called-8, be-7)
punct(called-8, ,-10)
punct(called-8, .-28)
case(contrast-12, in-11)
case(validity-17, with-13)
det(validity-17, the-14)
case(propositions-20, of-18)
det(men-24, All-23)
case(mortal-26, as-21)
cop(mortal-26, are-25)
punct(mortal-26, `-22)
punct(mortal-26, '-27)
amod(validity-3, general-2)
nsubjpass(called-8, validity-3)
nmod:of(validity-3, logic-5)
xcomp(called-8, essential-9)
nmod:in(called-8, contrast-12)
amod(validity-17, accidental-15)
amod(validity-17, general-16)
nmod:with(contrast-12, validity-17)
amod(propositions-20, such-19)
nmod:of(validity-17, propositions-20)
nsubj(mortal-26, men-24)
acl:as(propositions-20, mortal-26)
root(ROOT-0, propositions-13)
punct(Propositions-1, '-9)
case(Russell-3, 's-4)
case(axiom-6, like-2)
punct(axiom-6, `-5)
case(reducibility-8, of-7)
cc(propositions-13, and-15)
cop(propositions-13, are-10)
punct(propositions-13, .-39)
punct(propositions-13, ,-14)
cop(true-26, were-25)
mark(true-26, if-23)
aux(result-34, could-30)
cop(result-34, be-32)
det(result-34, the-33)
mark(result-34, that-20)
punct(result-34, ,-21)
punct(result-34, ,-27)
case(accident-38, of-35)
det(accident-38, a-36)
nsubj(propositions-13, Propositions-1)
nmod:poss(axiom-6, Russell-3)
nmod:like(Propositions-1, axiom-6)
nmod:of(axiom-6, reducibility-8)
neg(propositions-13, not-11)
amod(propositions-13, logical-12)
nsubj(explains-17, this-16)
conj:and(propositions-13, explains-17)
nmod:poss(feeling-19, our-18)
dobj(explains-17, feeling-19)
advmod(true-26, even-22)
nsubj(true-26, they-24)
advcl:if(result-34, true-26)
nmod:poss(truth-29, their-28)
nsubj(result-34, truth-29)
advmod(result-34, only-31)
ccomp(feeling-19, result-34)
amod(accident-38, fortunate-37)
nmod:of(result-34, accident-38)
G[38, 40] [?#1, ?#2, ?#3, ?#4, ?#5, Propositions, Russell, accident, accidental, axiom, called, contrast, essential, even, explains, feeling, fortunate, general, general, logic, logical, men, mortal, not, only, our, propositions, propositions, reducibility, result, such, their, they, this, true, truth, validity, validity]
Russell-poss : 's ->axiom
feeling- ->explains
general- ->?#1
even- ->true
explains-and->propositions
this- ->explains
our-poss->feeling
true-if->?#3
contrast-in->called
?#3-  : that ->feeling
not-  : are ->propositions
axiom-like->Propositions
logical- ->propositions
?#2-a->accident
?#4-The->validity
?#1-the->validity
this- ->?#1
reducibility-of->axiom
logic-of->?#4
their- ->they
such- ->propositions
they- ->they
fortunate- ->?#2
?#3-the->result
accidental- ->?#1
?#2-of->?#3
Russell- ->?#1
?#1-with->contrast
?#5-All->men
essential-  : be ->called
they-  : were ->true
truth-  : could  : could ->?#3
general- ->?#4
only-  : be ->?#3
propositions-of->?#1
?#4-  : might  : might ->called
mortal-as->propositions
Propositions- ->propositions
?#5-  : are ->mortal
their-poss->truth
------CorefChainz
CHAIN16-["All men" in sentence 1, "they" in sentence 2, "their" in sentence 2]
representative mention: "All men" in sentence 1
CHAIN12-["The general validity of logic" in sentence 1, "the accidental general validity of such propositions as ` All men are mortal '" in sentence 1, "this" in sentence 2]
representative mention: "the accidental general validity of such propositions as ` All men are mortal '" in sentence 1
