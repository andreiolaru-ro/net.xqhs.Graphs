 In order to recognize an expression as a tautology, in cases where no generality-sign occurs in it, one can employ the following intuitive method: instead of 'p', 'q', 'r', etc. I write 'TpF', 'TqF', 'TrF', etc. Truth-combinations I express by means of brackets, e.g. and I use lines to express the correlation of the truth or falsity of the whole proposition with the truth-combinations of its truth-arguments, in the following way So this sign, for instance, would represent the proposition p z q. Now, by way of example, I wish to examine the proposition P(p .Pp) (the law of contradiction) in order to determine whether it is a tautology. In our notation the form 'PE' is written as and the form 'E . n' as Hence the proposition P(p . Pp). reads as follows If we here substitute 'p' for 'q' and examine how the outermost T and F are connected with the innermost ones, the result will be that the truth of the whole proposition is correlated with all the truth-combinations of its argument, and its falsity with none of the truth-combinations.
------CorefChainz
CHAIN65-["the whole proposition with the truth-combinations of its truth-arguments" in sentence 3, "the whole proposition" in sentence 8]
representative mention: "the whole proposition with the truth-combinations of its truth-arguments" in sentence 3
CHAIN20-["I" in sentence 2, "I" in sentence 3, "I" in sentence 3, "I" in sentence 3]
representative mention: "I" in sentence 2
CHAIN69-["the truth of the whole proposition" in sentence 8, "its" in sentence 8, "its" in sentence 8]
representative mention: "the truth of the whole proposition" in sentence 8
CHAIN6-["an expression" in sentence 1, "it" in sentence 1]
representative mention: "an expression" in sentence 1
CHAIN39-["the law of contradiction" in sentence 4, "it" in sentence 4]
representative mention: "the law of contradiction" in sentence 4
CHAIN56-["the truth-combinations of its truth-arguments" in sentence 3, "the truth-combinations" in sentence 8]
representative mention: "the truth-combinations of its truth-arguments" in sentence 3
CHAIN57-["our" in sentence 5, "we" in sentence 8]
representative mention: "our" in sentence 5
CHAIN44-["the form" in sentence 5, "the form" in sentence 5]
representative mention: "the form" in sentence 5
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
root(ROOT-0, represent-46)
mwe(by-4, of-6)
mwe(by-4, means-5)
punct(Truth-combinations-1, ,-41)
punct(Truth-combinations-1, ,-44)
punct(Truth-combinations-1, ,-33)
case(brackets-7, by-4)
cc(brackets-7, and-10)
punct(brackets-7, ,-8)
mark(express-15, to-14)
det(correlation-17, the-16)
case(truth-20, of-18)
cc(truth-20, or-21)
det(truth-20, the-19)
case(proposition-26, of-23)
det(proposition-26, the-24)
case(truth-combinations-29, with-27)
det(truth-combinations-29, the-28)
case(truth-arguments-32, of-30)
case(way-37, in-34)
det(way-37, the-35)
case(sign-40, So-38)
det(sign-40, this-39)
case(instance-43, for-42)
aux(represent-46, would-45)
punct(represent-46, ,-58)
punct(represent-46, .-68)
punct(represent-46, ,-53)
compound(p-49, proposition-48)
det(p-49, the-47)
compound(q.-51, z-50)
case(way-55, by-54)
case(example-57, of-56)
mark(examine-62, to-61)
compound(P-65, proposition-64)
det(P-65, the-63)
punct(p-67, -LRB--66)
nsubj(represent-46, Truth-combinations-1)
nsubj(express-3, I-2)
acl:relcl(Truth-combinations-1, express-3)
nmod:by_means_of(express-3, brackets-7)
nmod:by_means_of(express-3, e.g.-9)
conj:and(brackets-7, e.g.-9)
nmod:by_means_of(express-3, I-11)
conj:and(brackets-7, I-11)
acl(brackets-7, use-12)
dobj(use-12, lines-13)
advcl:to(use-12, express-15)
dobj(express-15, correlation-17)
nmod:of(correlation-17, truth-20)
nmod:of(correlation-17, falsity-22)
conj:or(truth-20, falsity-22)
amod(proposition-26, whole-25)
nmod:of(truth-20, proposition-26)
nmod:with(proposition-26, truth-combinations-29)
nmod:poss(truth-arguments-32, its-31)
nmod:of(truth-combinations-29, truth-arguments-32)
amod(way-37, following-36)
nmod:in(Truth-combinations-1, way-37)
nmod:so(way-37, sign-40)
nmod:for(Truth-combinations-1, instance-43)
dobj(represent-46, p-49)
dep(p-49, q.-51)
advmod(p-49, Now-52)
nmod:by(represent-46, way-55)
nmod:of(way-55, example-57)
nsubj(wish-60, I-59)
nsubj:xsubj(examine-62, I-59)
parataxis(represent-46, wish-60)
xcomp(wish-60, examine-62)
dobj(examine-62, P-65)
dep(P-65, p-67)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
root(ROOT-0, represent-46)
mwe(by-4, of-6)
mwe(by-4, means-5)
punct(Truth-combinations-1, ,-41)
punct(Truth-combinations-1, ,-44)
punct(Truth-combinations-1, ,-33)
case(brackets-7, by-4)
cc(brackets-7, and-10)
punct(brackets-7, ,-8)
mark(express-15, to-14)
det(correlation-17, the-16)
case(truth-20, of-18)
cc(truth-20, or-21)
det(truth-20, the-19)
case(proposition-26, of-23)
det(proposition-26, the-24)
case(truth-combinations-29, with-27)
det(truth-combinations-29, the-28)
case(truth-arguments-32, of-30)
case(way-37, in-34)
det(way-37, the-35)
case(sign-40, So-38)
det(sign-40, this-39)
case(instance-43, for-42)
aux(represent-46, would-45)
punct(represent-46, ,-58)
punct(represent-46, .-68)
punct(represent-46, ,-53)
compound(p-49, proposition-48)
det(p-49, the-47)
compound(q.-51, z-50)
case(way-55, by-54)
case(example-57, of-56)
mark(examine-62, to-61)
compound(P-65, proposition-64)
det(P-65, the-63)
punct(p-67, -LRB--66)
nsubj(represent-46, Truth-combinations-1)
nsubj(express-3, I-2)
acl:relcl(Truth-combinations-1, express-3)
nmod:by_means_of(express-3, brackets-7)
nmod:by_means_of(express-3, e.g.-9)
conj:and(brackets-7, e.g.-9)
nmod:by_means_of(express-3, I-11)
conj:and(brackets-7, I-11)
acl(brackets-7, use-12)
dobj(use-12, lines-13)
advcl:to(use-12, express-15)
dobj(express-15, correlation-17)
nmod:of(correlation-17, truth-20)
nmod:of(correlation-17, falsity-22)
conj:or(truth-20, falsity-22)
amod(proposition-26, whole-25)
nmod:of(truth-20, proposition-26)
nmod:with(proposition-26, truth-combinations-29)
nmod:poss(truth-arguments-32, its-31)
nmod:of(truth-combinations-29, truth-arguments-32)
amod(way-37, following-36)
nmod:in(Truth-combinations-1, way-37)
nmod:so(way-37, sign-40)
nmod:for(Truth-combinations-1, instance-43)
dobj(represent-46, p-49)
dep(p-49, q.-51)
advmod(p-49, Now-52)
nmod:by(represent-46, way-55)
nmod:of(way-55, example-57)
nsubj(wish-60, I-59)
nsubj:xsubj(examine-62, I-59)
parataxis(represent-46, wish-60)
xcomp(wish-60, examine-62)
dobj(examine-62, P-65)
dep(P-65, p-67)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-18)
det(law-5, the-4)
punct(law-5, -LRB--3)
punct(law-5, -RRB--8)
case(contradiction-7, of-6)
mwe(in-9, order-10)
mark(determine-12, in-9)
mark(determine-12, to-11)
cop(tautology-17, is-15)
det(tautology-17, a-16)
mark(tautology-17, whether-13)
dep(Pp-1, law-5)
nmod:of(law-5, contradiction-7)
acl:in_order(Pp-1, determine-12)
nsubj(tautology-17, it-14)
ccomp(determine-12, tautology-17)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
root(ROOT-0, represent-46)
mwe(by-4, of-6)
mwe(by-4, means-5)
punct(Truth-combinations-1, ,-41)
punct(Truth-combinations-1, ,-44)
punct(Truth-combinations-1, ,-33)
case(brackets-7, by-4)
cc(brackets-7, and-10)
punct(brackets-7, ,-8)
mark(express-15, to-14)
det(correlation-17, the-16)
case(truth-20, of-18)
cc(truth-20, or-21)
det(truth-20, the-19)
case(proposition-26, of-23)
det(proposition-26, the-24)
case(truth-combinations-29, with-27)
det(truth-combinations-29, the-28)
case(truth-arguments-32, of-30)
case(way-37, in-34)
det(way-37, the-35)
case(sign-40, So-38)
det(sign-40, this-39)
case(instance-43, for-42)
aux(represent-46, would-45)
punct(represent-46, ,-58)
punct(represent-46, .-68)
punct(represent-46, ,-53)
compound(p-49, proposition-48)
det(p-49, the-47)
compound(q.-51, z-50)
case(way-55, by-54)
case(example-57, of-56)
mark(examine-62, to-61)
compound(P-65, proposition-64)
det(P-65, the-63)
punct(p-67, -LRB--66)
nsubj(represent-46, Truth-combinations-1)
nsubj(express-3, I-2)
acl:relcl(Truth-combinations-1, express-3)
nmod:by_means_of(express-3, brackets-7)
nmod:by_means_of(express-3, e.g.-9)
conj:and(brackets-7, e.g.-9)
nmod:by_means_of(express-3, I-11)
conj:and(brackets-7, I-11)
acl(brackets-7, use-12)
dobj(use-12, lines-13)
advcl:to(use-12, express-15)
dobj(express-15, correlation-17)
nmod:of(correlation-17, truth-20)
nmod:of(correlation-17, falsity-22)
conj:or(truth-20, falsity-22)
amod(proposition-26, whole-25)
nmod:of(truth-20, proposition-26)
nmod:with(proposition-26, truth-combinations-29)
nmod:poss(truth-arguments-32, its-31)
nmod:of(truth-combinations-29, truth-arguments-32)
amod(way-37, following-36)
nmod:in(Truth-combinations-1, way-37)
nmod:so(way-37, sign-40)
nmod:for(Truth-combinations-1, instance-43)
dobj(represent-46, p-49)
dep(p-49, q.-51)
advmod(p-49, Now-52)
nmod:by(represent-46, way-55)
nmod:of(way-55, example-57)
nsubj(wish-60, I-59)
nsubj:xsubj(examine-62, I-59)
parataxis(represent-46, wish-60)
xcomp(wish-60, examine-62)
dobj(examine-62, P-65)
dep(P-65, p-67)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-18)
det(law-5, the-4)
punct(law-5, -LRB--3)
punct(law-5, -RRB--8)
case(contradiction-7, of-6)
mwe(in-9, order-10)
mark(determine-12, in-9)
mark(determine-12, to-11)
cop(tautology-17, is-15)
det(tautology-17, a-16)
mark(tautology-17, whether-13)
dep(Pp-1, law-5)
nmod:of(law-5, contradiction-7)
acl:in_order(Pp-1, determine-12)
nsubj(tautology-17, it-14)
ccomp(determine-12, tautology-17)
root(ROOT-0, written-10)
case(notation-3, In-1)
det(form-5, the-4)
punct(PE-7, `-6)
punct(PE-7, '-8)
auxpass(written-10, is-9)
punct(written-10, .-17)
cc(as-11, and-12)
det(form-14, the-13)
punct(form-14, '-15)
nmod:poss(notation-3, our-2)
nmod:in(written-10, notation-3)
nsubjpass(written-10, form-5)
dep(form-5, PE-7)
nmod(written-10, as-11)
dep(E-16, form-14)
nmod(written-10, E-16)
conj:and(as-11, E-16)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
root(ROOT-0, represent-46)
mwe(by-4, of-6)
mwe(by-4, means-5)
punct(Truth-combinations-1, ,-41)
punct(Truth-combinations-1, ,-44)
punct(Truth-combinations-1, ,-33)
case(brackets-7, by-4)
cc(brackets-7, and-10)
punct(brackets-7, ,-8)
mark(express-15, to-14)
det(correlation-17, the-16)
case(truth-20, of-18)
cc(truth-20, or-21)
det(truth-20, the-19)
case(proposition-26, of-23)
det(proposition-26, the-24)
case(truth-combinations-29, with-27)
det(truth-combinations-29, the-28)
case(truth-arguments-32, of-30)
case(way-37, in-34)
det(way-37, the-35)
case(sign-40, So-38)
det(sign-40, this-39)
case(instance-43, for-42)
aux(represent-46, would-45)
punct(represent-46, ,-58)
punct(represent-46, .-68)
punct(represent-46, ,-53)
compound(p-49, proposition-48)
det(p-49, the-47)
compound(q.-51, z-50)
case(way-55, by-54)
case(example-57, of-56)
mark(examine-62, to-61)
compound(P-65, proposition-64)
det(P-65, the-63)
punct(p-67, -LRB--66)
nsubj(represent-46, Truth-combinations-1)
nsubj(express-3, I-2)
acl:relcl(Truth-combinations-1, express-3)
nmod:by_means_of(express-3, brackets-7)
nmod:by_means_of(express-3, e.g.-9)
conj:and(brackets-7, e.g.-9)
nmod:by_means_of(express-3, I-11)
conj:and(brackets-7, I-11)
acl(brackets-7, use-12)
dobj(use-12, lines-13)
advcl:to(use-12, express-15)
dobj(express-15, correlation-17)
nmod:of(correlation-17, truth-20)
nmod:of(correlation-17, falsity-22)
conj:or(truth-20, falsity-22)
amod(proposition-26, whole-25)
nmod:of(truth-20, proposition-26)
nmod:with(proposition-26, truth-combinations-29)
nmod:poss(truth-arguments-32, its-31)
nmod:of(truth-combinations-29, truth-arguments-32)
amod(way-37, following-36)
nmod:in(Truth-combinations-1, way-37)
nmod:so(way-37, sign-40)
nmod:for(Truth-combinations-1, instance-43)
dobj(represent-46, p-49)
dep(p-49, q.-51)
advmod(p-49, Now-52)
nmod:by(represent-46, way-55)
nmod:of(way-55, example-57)
nsubj(wish-60, I-59)
nsubj:xsubj(examine-62, I-59)
parataxis(represent-46, wish-60)
xcomp(wish-60, examine-62)
dobj(examine-62, P-65)
dep(P-65, p-67)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-18)
det(law-5, the-4)
punct(law-5, -LRB--3)
punct(law-5, -RRB--8)
case(contradiction-7, of-6)
mwe(in-9, order-10)
mark(determine-12, in-9)
mark(determine-12, to-11)
cop(tautology-17, is-15)
det(tautology-17, a-16)
mark(tautology-17, whether-13)
dep(Pp-1, law-5)
nmod:of(law-5, contradiction-7)
acl:in_order(Pp-1, determine-12)
nsubj(tautology-17, it-14)
ccomp(determine-12, tautology-17)
root(ROOT-0, written-10)
case(notation-3, In-1)
det(form-5, the-4)
punct(PE-7, `-6)
punct(PE-7, '-8)
auxpass(written-10, is-9)
punct(written-10, .-17)
cc(as-11, and-12)
det(form-14, the-13)
punct(form-14, '-15)
nmod:poss(notation-3, our-2)
nmod:in(written-10, notation-3)
nsubjpass(written-10, form-5)
dep(form-5, PE-7)
nmod(written-10, as-11)
dep(E-16, form-14)
nmod(written-10, E-16)
conj:and(as-11, E-16)
root(ROOT-0, n-1)
punct(n-1, '-2)
punct(n-1, .-10)
case(P-7, as-3)
compound(P-7, proposition-6)
det(P-7, the-5)
punct(p-9, -LRB--8)
advmod(P-7, Hence-4)
nmod:as(n-1, P-7)
dep(P-7, p-9)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
root(ROOT-0, represent-46)
mwe(by-4, of-6)
mwe(by-4, means-5)
punct(Truth-combinations-1, ,-41)
punct(Truth-combinations-1, ,-44)
punct(Truth-combinations-1, ,-33)
case(brackets-7, by-4)
cc(brackets-7, and-10)
punct(brackets-7, ,-8)
mark(express-15, to-14)
det(correlation-17, the-16)
case(truth-20, of-18)
cc(truth-20, or-21)
det(truth-20, the-19)
case(proposition-26, of-23)
det(proposition-26, the-24)
case(truth-combinations-29, with-27)
det(truth-combinations-29, the-28)
case(truth-arguments-32, of-30)
case(way-37, in-34)
det(way-37, the-35)
case(sign-40, So-38)
det(sign-40, this-39)
case(instance-43, for-42)
aux(represent-46, would-45)
punct(represent-46, ,-58)
punct(represent-46, .-68)
punct(represent-46, ,-53)
compound(p-49, proposition-48)
det(p-49, the-47)
compound(q.-51, z-50)
case(way-55, by-54)
case(example-57, of-56)
mark(examine-62, to-61)
compound(P-65, proposition-64)
det(P-65, the-63)
punct(p-67, -LRB--66)
nsubj(represent-46, Truth-combinations-1)
nsubj(express-3, I-2)
acl:relcl(Truth-combinations-1, express-3)
nmod:by_means_of(express-3, brackets-7)
nmod:by_means_of(express-3, e.g.-9)
conj:and(brackets-7, e.g.-9)
nmod:by_means_of(express-3, I-11)
conj:and(brackets-7, I-11)
acl(brackets-7, use-12)
dobj(use-12, lines-13)
advcl:to(use-12, express-15)
dobj(express-15, correlation-17)
nmod:of(correlation-17, truth-20)
nmod:of(correlation-17, falsity-22)
conj:or(truth-20, falsity-22)
amod(proposition-26, whole-25)
nmod:of(truth-20, proposition-26)
nmod:with(proposition-26, truth-combinations-29)
nmod:poss(truth-arguments-32, its-31)
nmod:of(truth-combinations-29, truth-arguments-32)
amod(way-37, following-36)
nmod:in(Truth-combinations-1, way-37)
nmod:so(way-37, sign-40)
nmod:for(Truth-combinations-1, instance-43)
dobj(represent-46, p-49)
dep(p-49, q.-51)
advmod(p-49, Now-52)
nmod:by(represent-46, way-55)
nmod:of(way-55, example-57)
nsubj(wish-60, I-59)
nsubj:xsubj(examine-62, I-59)
parataxis(represent-46, wish-60)
xcomp(wish-60, examine-62)
dobj(examine-62, P-65)
dep(P-65, p-67)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-18)
det(law-5, the-4)
punct(law-5, -LRB--3)
punct(law-5, -RRB--8)
case(contradiction-7, of-6)
mwe(in-9, order-10)
mark(determine-12, in-9)
mark(determine-12, to-11)
cop(tautology-17, is-15)
det(tautology-17, a-16)
mark(tautology-17, whether-13)
dep(Pp-1, law-5)
nmod:of(law-5, contradiction-7)
acl:in_order(Pp-1, determine-12)
nsubj(tautology-17, it-14)
ccomp(determine-12, tautology-17)
root(ROOT-0, written-10)
case(notation-3, In-1)
det(form-5, the-4)
punct(PE-7, `-6)
punct(PE-7, '-8)
auxpass(written-10, is-9)
punct(written-10, .-17)
cc(as-11, and-12)
det(form-14, the-13)
punct(form-14, '-15)
nmod:poss(notation-3, our-2)
nmod:in(written-10, notation-3)
nsubjpass(written-10, form-5)
dep(form-5, PE-7)
nmod(written-10, as-11)
dep(E-16, form-14)
nmod(written-10, E-16)
conj:and(as-11, E-16)
root(ROOT-0, n-1)
punct(n-1, '-2)
punct(n-1, .-10)
case(P-7, as-3)
compound(P-7, proposition-6)
det(P-7, the-5)
punct(p-9, -LRB--8)
advmod(P-7, Hence-4)
nmod:as(n-1, P-7)
dep(P-7, p-9)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-3)
---
qqroot(ROOT-0, employ-22)
mwe(In-1, order-2)
mark(recognize-4, In-1)
mark(recognize-4, to-3)
punct(recognize-4, ,-10)
det(expression-6, an-5)
case(tautology-9, as-7)
det(tautology-9, a-8)
case(cases-12, in-11)
case(it-18, in-17)
aux(employ-22, can-21)
punct(employ-22, ,-19)
punct(employ-22, :-27)
punct(employ-22, .-43)
det(method-26, the-23)
mwe(instead-28, of-29)
case(p-31, instead-28)
punct(p-31, '-32)
punct(p-31, ,-33)
punct(p-31, `-34)
punct(p-31, '-36)
punct(p-31, ,-37)
punct(p-31, `-38)
punct(p-31, '-40)
punct(p-31, ,-41)
punct(p-31, `-30)
advcl:in_order(employ-22, recognize-4)
dobj(recognize-4, expression-6)
nmod:as(recognize-4, tautology-9)
nmod:in(recognize-4, cases-12)
advmod(occurs-16, where-13)
neg(generality-sign-15, no-14)
nsubj(occurs-16, generality-sign-15)
acl:relcl(cases-12, occurs-16)
nmod:in(occurs-16, it-18)
nsubj(employ-22, one-20)
amod(method-26, following-24)
amod(method-26, intuitive-25)
dobj(employ-22, method-26)
parataxis(employ-22, p-31)
dep(p-31, q-35)
dep(p-31, r-39)
dep(p-31, etc.-42)
root(ROOT-0, write-2)
punct(write-2, `-3)
punct(write-2, '-5)
punct(write-2, ,-6)
punct(write-2, `-7)
punct(write-2, .-16)
punct(TqF-8, '-9)
punct(TqF-8, ,-10)
punct(TqF-8, ,-14)
punct(TrF-12, `-11)
punct(TrF-12, '-13)
nsubj(write-2, I-1)
dobj(write-2, TpF-4)
dep(write-2, TqF-8)
appos(TqF-8, TrF-12)
dep(TqF-8, etc.-15)
root(ROOT-0, represent-46)
mwe(by-4, of-6)
mwe(by-4, means-5)
punct(Truth-combinations-1, ,-41)
punct(Truth-combinations-1, ,-44)
punct(Truth-combinations-1, ,-33)
case(brackets-7, by-4)
cc(brackets-7, and-10)
punct(brackets-7, ,-8)
mark(express-15, to-14)
det(correlation-17, the-16)
case(truth-20, of-18)
cc(truth-20, or-21)
det(truth-20, the-19)
case(proposition-26, of-23)
det(proposition-26, the-24)
case(truth-combinations-29, with-27)
det(truth-combinations-29, the-28)
case(truth-arguments-32, of-30)
case(way-37, in-34)
det(way-37, the-35)
case(sign-40, So-38)
det(sign-40, this-39)
case(instance-43, for-42)
aux(represent-46, would-45)
punct(represent-46, ,-58)
punct(represent-46, .-68)
punct(represent-46, ,-53)
compound(p-49, proposition-48)
det(p-49, the-47)
compound(q.-51, z-50)
case(way-55, by-54)
case(example-57, of-56)
mark(examine-62, to-61)
compound(P-65, proposition-64)
det(P-65, the-63)
punct(p-67, -LRB--66)
nsubj(represent-46, Truth-combinations-1)
nsubj(express-3, I-2)
acl:relcl(Truth-combinations-1, express-3)
nmod:by_means_of(express-3, brackets-7)
nmod:by_means_of(express-3, e.g.-9)
conj:and(brackets-7, e.g.-9)
nmod:by_means_of(express-3, I-11)
conj:and(brackets-7, I-11)
acl(brackets-7, use-12)
dobj(use-12, lines-13)
advcl:to(use-12, express-15)
dobj(express-15, correlation-17)
nmod:of(correlation-17, truth-20)
nmod:of(correlation-17, falsity-22)
conj:or(truth-20, falsity-22)
amod(proposition-26, whole-25)
nmod:of(truth-20, proposition-26)
nmod:with(proposition-26, truth-combinations-29)
nmod:poss(truth-arguments-32, its-31)
nmod:of(truth-combinations-29, truth-arguments-32)
amod(way-37, following-36)
nmod:in(Truth-combinations-1, way-37)
nmod:so(way-37, sign-40)
nmod:for(Truth-combinations-1, instance-43)
dobj(represent-46, p-49)
dep(p-49, q.-51)
advmod(p-49, Now-52)
nmod:by(represent-46, way-55)
nmod:of(way-55, example-57)
nsubj(wish-60, I-59)
nsubj:xsubj(examine-62, I-59)
parataxis(represent-46, wish-60)
xcomp(wish-60, examine-62)
dobj(examine-62, P-65)
dep(P-65, p-67)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-18)
det(law-5, the-4)
punct(law-5, -LRB--3)
punct(law-5, -RRB--8)
case(contradiction-7, of-6)
mwe(in-9, order-10)
mark(determine-12, in-9)
mark(determine-12, to-11)
cop(tautology-17, is-15)
det(tautology-17, a-16)
mark(tautology-17, whether-13)
dep(Pp-1, law-5)
nmod:of(law-5, contradiction-7)
acl:in_order(Pp-1, determine-12)
nsubj(tautology-17, it-14)
ccomp(determine-12, tautology-17)
root(ROOT-0, written-10)
case(notation-3, In-1)
det(form-5, the-4)
punct(PE-7, `-6)
punct(PE-7, '-8)
auxpass(written-10, is-9)
punct(written-10, .-17)
cc(as-11, and-12)
det(form-14, the-13)
punct(form-14, '-15)
nmod:poss(notation-3, our-2)
nmod:in(written-10, notation-3)
nsubjpass(written-10, form-5)
dep(form-5, PE-7)
nmod(written-10, as-11)
dep(E-16, form-14)
nmod(written-10, E-16)
conj:and(as-11, E-16)
root(ROOT-0, n-1)
punct(n-1, '-2)
punct(n-1, .-10)
case(P-7, as-3)
compound(P-7, proposition-6)
det(P-7, the-5)
punct(p-9, -LRB--8)
advmod(P-7, Hence-4)
nmod:as(n-1, P-7)
dep(P-7, p-9)
root(ROOT-0, Pp-1)
punct(Pp-1, -RRB--2)
punct(Pp-1, .-3)
root(ROOT-0, be-33)
mark(follows-3, as-2)
cc(substitute-7, and-15)
mark(substitute-7, If-4)
punct(p-9, `-8)
punct(p-9, '-10)
case(q-13, for-11)
punct(q-13, `-12)
punct(q-13, '-14)
cc(T-20, and-21)
det(T-20, the-18)
auxpass(connected-24, are-23)
case(ones-28, with-25)
det(ones-28, the-26)
det(result-31, the-30)
aux(be-33, will-32)
punct(be-33, .-59)
punct(be-33, ,-29)
det(truth-36, the-35)
case(proposition-40, of-37)
det(proposition-40, the-38)
auxpass(correlated-42, is-41)
cc(correlated-42, and-51)
mark(correlated-42, that-34)
punct(correlated-42, ,-50)
case(truth-combinations-46, with-43)
det(truth-combinations-46, the-45)
case(argument-49, of-47)
case(none-55, with-54)
case(truth-combinations-58, of-56)
det(truth-combinations-58, the-57)
advcl(be-33, reads-1)
advcl:as(reads-1, follows-3)
nsubj(substitute-7, we-5)
nsubj(examine-16, we-5)
advmod(substitute-7, here-6)
advcl:if(follows-3, substitute-7)
dobj(substitute-7, p-9)
nmod:for(p-9, q-13)
advcl:if(follows-3, examine-16)
conj:and(substitute-7, examine-16)
advmod(connected-24, how-17)
amod(T-20, outermost-19)
nsubjpass(connected-24, T-20)
conj:and(T-20, F-22)
nsubjpass(connected-24, F-22)
ccomp(examine-16, connected-24)
amod(ones-28, innermost-27)
nmod:with(connected-24, ones-28)
nsubj(be-33, result-31)
nsubjpass(correlated-42, truth-36)
amod(proposition-40, whole-39)
nmod:of(truth-36, proposition-40)
ccomp(be-33, correlated-42)
det:predet(truth-combinations-46, all-44)
nmod:with(correlated-42, truth-combinations-46)
nmod:poss(argument-49, its-48)
nmod:of(truth-combinations-46, argument-49)
nmod:poss(falsity-53, its-52)
ccomp(be-33, falsity-53)
conj:and(correlated-42, falsity-53)
nmod:with(falsity-53, none-55)
nmod:of(none-55, truth-combinations-58)
G[131, 135] [?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13, ?14, ?15, ?16, ?17, ?18, ?19, ?20, ?21, ?22, ?23, E16, F22, Hence4, I59, I1, I2, I11, In order1, Now52, PE7, Pp1, Pp1, T2147483647, TpF4, TqF8, TrF12, Truth-combinations1, all44, argument49, as11, be33, brackets7, by means of4, cases12, connected24, contradiction7, correlated42, correlation2147483647, determine12, e.g.9, employ22, etc.42, etc.15, examine16, examine62, example57, express3, express15, expression2147483647, falsity53, falsity22, following24, following36, follows3, form2147483647, form2147483647, generality-sign15, here6, how17, in order9, innermost27, instance43, instead of28, intuitive25, it18, it14, its48, its31, its52, law2147483647, lines13, method2147483647, n1, no14, none55, notation3, occurs16, one20, ones2147483647, our2, outermost19, p31, p9, p9, p67, proposition2147483647, proposition2147483647, proposition P2147483647, proposition P2147483647, proposition p2147483647, q35, q13, r39, reads1, recognize4, represent46, result2147483647, sign2147483647, substitute7, tautology2147483647, tautology2147483647, truth2147483647, truth2147483647, truth-arguments32, truth-combinations2147483647, truth-combinations2147483647, truth-combinations2147483647, use12, way2147483647, way55, we5, where13, whole39, whole25, wish60, write2, written10, z q.51]
I59-xsubj->examine62
truth-arguments32-of->?18
following24- ->?8
p31-  : instead of ->employ22
TrF12- ->TqF8
here6- ->substitute7
e.g.9-and->brackets7
E16-and->as11
?20-the->proposition2147483647
?14- ->?8
it14-  : is ->?16
?23-of->?10
where13- ->occurs16
examine62-  : to ->wish60
?21- ->express15
no14- ->generality-sign15
one20-  : can ->employ22
I2- ->express3
our2-poss : In ->notation3
?3-with->connected24
?15-the->proposition p2147483647
no14- ->?2
lines13- ->use12
?5-  : In order  : to ->recognize4
as11-  : is ->written10
?7-the->law2147483647
TpF4- ->write2
?11-the->truth-combinations2147483647
?1-as->recognize4
innermost27- ->?3
determine12-in_order : in order  : in order ->Pp1
examine16-if->follows3
following36- ->?13
its48- ->?10
?16-  : whether  : whether  : to ->determine12
?22-the->truth-combinations2147483647
generality-sign15- ->occurs16
?17-  : will ->be33
?17-the->result2147483647
E16- ->written10
?4-as->n1
it18-in->occurs16
use12- ->brackets7
cases12-in->recognize4
wish60- ->represent46
its48-poss->argument49
Hence4- ->?4
falsity53-and->correlated42
?7- ->Pp1
?13-the->way2147483647
?15-  : would ->represent46
correlated42-  : that ->be33
?3-the->ones2147483647
?6-the->proposition P2147483647
we5- ->examine16
?18-the->truth-combinations2147483647
its31-poss->truth-arguments32
?16-a->tautology2147483647
?2- ->our2
e.g.9-by_means_of->express3
?4-the->proposition P2147483647
?10-  : is  : is ->correlated42
?22-with->correlated42
substitute7-if : If  : If ->follows3
?10-the->truth2147483647
?12- ->connected24
TqF8- ->write2
follows3-as->reads1
F22-and->?12
etc.15- ->TqF8
instance43-for->Truth-combinations1
?19-the->form2147483647
?11-of->none55
?8-the->method2147483647
?11- ->?18
?12-the->T2147483647
etc.42- ->p31
express15-to->use12
?9-the->truth2147483647
notation3-in->written10
examine16-and->substitute7
?20-of->?9
?18-with->?20
?14-this->sign2147483647
reads1- ->be33
?8- ->employ22
Now52- ->?10
intuitive25- ->?8
?19- ->E16
how17- ->connected24
outermost19- ->?12
r39- ->p31
I1- ->write2
connected24- ->examine16
z q.51- ->?15
?1-a->tautology2147483647
?9-of->?21
F22-  : are ->connected24
Now52- ->?15
falsity22-or->?9
q13-for->p9
we5- ->substitute7
?5-an->expression2147483647
?21-the->correlation2147483647
falsity53- ->be33
p9- ->substitute7
?6- ->examine62
express3-relcl->Truth-combinations1
?2- ->written10
whole25- ->?20
p9- ->?4
occurs16-relcl->cases12
?2-the->form2147483647
recognize4-in_order->employ22
?14-so : So ->?13
q35- ->p31
way55-by->represent46
I11-and->brackets7
none55-with->falsity53
example57-of->way55
its52-poss->falsity53
it18- ->here6
PE7- ->?2
I59- ->wish60
Truth-combinations1- ->represent46
p67- ->?6
?23-the->proposition2147483647
all44-predet->?22
contradiction7-of->?7
falsity22-of->?21
brackets7-by_means_of : by means of ->express3
argument49-of->?22
I11-by_means_of->express3
whole39- ->?23
?13-in->Truth-combinations1
------CorefChainz
CHAIN65-["the whole proposition with the truth-combinations of its truth-arguments" in sentence 3, "the whole proposition" in sentence 8]
representative mention: "the whole proposition with the truth-combinations of its truth-arguments" in sentence 3
CHAIN20-["I" in sentence 2, "I" in sentence 3, "I" in sentence 3, "I" in sentence 3]
representative mention: "I" in sentence 2
CHAIN69-["the truth of the whole proposition" in sentence 8, "its" in sentence 8, "its" in sentence 8]
representative mention: "the truth of the whole proposition" in sentence 8
CHAIN6-["an expression" in sentence 1, "it" in sentence 1]
representative mention: "an expression" in sentence 1
CHAIN39-["the law of contradiction" in sentence 4, "it" in sentence 4]
representative mention: "the law of contradiction" in sentence 4
CHAIN56-["the truth-combinations of its truth-arguments" in sentence 3, "the truth-combinations" in sentence 8]
representative mention: "the truth-combinations of its truth-arguments" in sentence 3
CHAIN57-["our" in sentence 5, "we" in sentence 8]
representative mention: "our" in sentence 5
CHAIN44-["the form" in sentence 5, "the form" in sentence 5]
representative mention: "the form" in sentence 5
