 When we infer q from p C q and Pp, the relation between the propositional forms of 'p C q' and 'Pp' is masked, in this case, by our mode of signifying. But if instead of 'p C q' we write, for example, 'p|q . | . p|q', and instead of 'Pp', 'p|p' (p|q = neither p nor q), then the inner connexion becomes obvious. (The possibility of inference from (x) . fx to fa shows that the symbol (x) . fx itself has generality in it.)
------CorefChainz
CHAIN33-["fx itself" in sentence 7, "itself" in sentence 7, "it" in sentence 7]
representative mention: "fx itself" in sentence 7
CHAIN8-["we" in sentence 1, "our" in sentence 1, "we" in sentence 2]
representative mention: "we" in sentence 1
---
Enhanced PLUS PLUS dependencies
---
---
---
---
---
---
---
---
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
root(ROOT-0, write-11)
mwe(instead-3, of-4)
compound(q-8, p-6)
compound(q-8, C-7)
mark(q-8, if-2)
punct(q-8, '-5)
cc(write-11, But-1)
punct(write-11, .-20)
punct(write-11, '-9)
punct(write-11, ,-12)
punct(write-11, ,-15)
punct(write-11, `-16)
case(example-14, for-13)
compound(q-19, p-17)
advmod(q-8, instead-3)
advcl:if(write-11, q-8)
nsubj(write-11, we-10)
nmod:for(write-11, example-14)
nummod(q-19, |-18)
dobj(write-11, q-19)
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
root(ROOT-0, write-11)
mwe(instead-3, of-4)
compound(q-8, p-6)
compound(q-8, C-7)
mark(q-8, if-2)
punct(q-8, '-5)
cc(write-11, But-1)
punct(write-11, .-20)
punct(write-11, '-9)
punct(write-11, ,-12)
punct(write-11, ,-15)
punct(write-11, `-16)
case(example-14, for-13)
compound(q-19, p-17)
advmod(q-8, instead-3)
advcl:if(write-11, q-8)
nsubj(write-11, we-10)
nmod:for(write-11, example-14)
nummod(q-19, |-18)
dobj(write-11, q-19)
root(ROOT-0, |-1)
punct(|-1, .-2)
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
root(ROOT-0, write-11)
mwe(instead-3, of-4)
compound(q-8, p-6)
compound(q-8, C-7)
mark(q-8, if-2)
punct(q-8, '-5)
cc(write-11, But-1)
punct(write-11, .-20)
punct(write-11, '-9)
punct(write-11, ,-12)
punct(write-11, ,-15)
punct(write-11, `-16)
case(example-14, for-13)
compound(q-19, p-17)
advmod(q-8, instead-3)
advcl:if(write-11, q-8)
nsubj(write-11, we-10)
nmod:for(write-11, example-14)
nummod(q-19, |-18)
dobj(write-11, q-19)
root(ROOT-0, |-1)
punct(|-1, .-2)
root(ROOT-0, q-3)
cc(q-3, and-6)
compound(q-3, p-1)
punct(q-3, ,-28)
punct(q-3, .-35)
punct(q-3, '-4)
punct(q-3, ,-5)
mwe(instead-7, of-8)
case(Pp-10, instead-7)
punct(Pp-10, `-9)
punct(Pp-10, '-11)
punct(Pp-10, ,-12)
punct(Pp-10, `-13)
punct(Pp-10, '-17)
compound(p-16, p-14)
compound(p-16, |-15)
compound(q-21, p-19)
punct(q-21, -RRB--27)
punct(q-21, -LRB--18)
cc(p-24, nor-25)
det(connexion-32, the-30)
nummod(q-3, |-2)
conj:and(q-3, Pp-10)
dep(Pp-10, p-16)
nummod(q-21, |-20)
dep(Pp-10, q-21)
amod(q-21, =-22)
cc:preconj(p-24, neither-23)
dep(=-22, p-24)
dep(=-22, q-26)
conj:nor(p-24, q-26)
advmod(becomes-33, then-29)
amod(connexion-32, inner-31)
nsubj(becomes-33, connexion-32)
acl:relcl(q-3, becomes-33)
xcomp(becomes-33, obvious-34)
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
root(ROOT-0, write-11)
mwe(instead-3, of-4)
compound(q-8, p-6)
compound(q-8, C-7)
mark(q-8, if-2)
punct(q-8, '-5)
cc(write-11, But-1)
punct(write-11, .-20)
punct(write-11, '-9)
punct(write-11, ,-12)
punct(write-11, ,-15)
punct(write-11, `-16)
case(example-14, for-13)
compound(q-19, p-17)
advmod(q-8, instead-3)
advcl:if(write-11, q-8)
nsubj(write-11, we-10)
nmod:for(write-11, example-14)
nummod(q-19, |-18)
dobj(write-11, q-19)
root(ROOT-0, |-1)
punct(|-1, .-2)
root(ROOT-0, q-3)
cc(q-3, and-6)
compound(q-3, p-1)
punct(q-3, ,-28)
punct(q-3, .-35)
punct(q-3, '-4)
punct(q-3, ,-5)
mwe(instead-7, of-8)
case(Pp-10, instead-7)
punct(Pp-10, `-9)
punct(Pp-10, '-11)
punct(Pp-10, ,-12)
punct(Pp-10, `-13)
punct(Pp-10, '-17)
compound(p-16, p-14)
compound(p-16, |-15)
compound(q-21, p-19)
punct(q-21, -RRB--27)
punct(q-21, -LRB--18)
cc(p-24, nor-25)
det(connexion-32, the-30)
nummod(q-3, |-2)
conj:and(q-3, Pp-10)
dep(Pp-10, p-16)
nummod(q-21, |-20)
dep(Pp-10, q-21)
amod(q-21, =-22)
cc:preconj(p-24, neither-23)
dep(=-22, p-24)
dep(=-22, q-26)
conj:nor(p-24, q-26)
advmod(becomes-33, then-29)
amod(connexion-32, inner-31)
nsubj(becomes-33, connexion-32)
acl:relcl(q-3, becomes-33)
xcomp(becomes-33, obvious-34)
root(ROOT-0, -LRB--1)
det(possibility-3, The-2)
punct(possibility-3, .-10)
case(inference-5, of-4)
case(x-8, from-6)
punct(x-8, -LRB--7)
punct(x-8, -RRB--9)
root(-LRB--1, possibility-3)
nmod:of(possibility-3, inference-5)
nmod:from(inference-5, x-8)
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
root(ROOT-0, write-11)
mwe(instead-3, of-4)
compound(q-8, p-6)
compound(q-8, C-7)
mark(q-8, if-2)
punct(q-8, '-5)
cc(write-11, But-1)
punct(write-11, .-20)
punct(write-11, '-9)
punct(write-11, ,-12)
punct(write-11, ,-15)
punct(write-11, `-16)
case(example-14, for-13)
compound(q-19, p-17)
advmod(q-8, instead-3)
advcl:if(write-11, q-8)
nsubj(write-11, we-10)
nmod:for(write-11, example-14)
nummod(q-19, |-18)
dobj(write-11, q-19)
root(ROOT-0, |-1)
punct(|-1, .-2)
root(ROOT-0, q-3)
cc(q-3, and-6)
compound(q-3, p-1)
punct(q-3, ,-28)
punct(q-3, .-35)
punct(q-3, '-4)
punct(q-3, ,-5)
mwe(instead-7, of-8)
case(Pp-10, instead-7)
punct(Pp-10, `-9)
punct(Pp-10, '-11)
punct(Pp-10, ,-12)
punct(Pp-10, `-13)
punct(Pp-10, '-17)
compound(p-16, p-14)
compound(p-16, |-15)
compound(q-21, p-19)
punct(q-21, -RRB--27)
punct(q-21, -LRB--18)
cc(p-24, nor-25)
det(connexion-32, the-30)
nummod(q-3, |-2)
conj:and(q-3, Pp-10)
dep(Pp-10, p-16)
nummod(q-21, |-20)
dep(Pp-10, q-21)
amod(q-21, =-22)
cc:preconj(p-24, neither-23)
dep(=-22, p-24)
dep(=-22, q-26)
conj:nor(p-24, q-26)
advmod(becomes-33, then-29)
amod(connexion-32, inner-31)
nsubj(becomes-33, connexion-32)
acl:relcl(q-3, becomes-33)
xcomp(becomes-33, obvious-34)
root(ROOT-0, -LRB--1)
det(possibility-3, The-2)
punct(possibility-3, .-10)
case(inference-5, of-4)
case(x-8, from-6)
punct(x-8, -LRB--7)
punct(x-8, -RRB--9)
root(-LRB--1, possibility-3)
nmod:of(possibility-3, inference-5)
nmod:from(inference-5, x-8)
root(ROOT-0, shows-4)
case(fa-3, to-2)
punct(shows-4, .-11)
compound(x-9, symbol-7)
det(x-9, the-6)
punct(x-9, -LRB--8)
punct(x-9, -RRB--10)
nsubj(shows-4, fx-1)
nmod:to(fx-1, fa-3)
dobj(shows-4, that-5)
appos(that-5, x-9)
---
qqroot(ROOT-0, masked-29)
case(q-8, from-5)
cc(q-8, and-9)
compound(q-8, p-6)
compound(q-8, C-7)
det(relation-13, the-12)
case(forms-17, between-14)
det(forms-17, the-15)
case(q-22, of-18)
cc(q-22, and-24)
compound(q-22, p-20)
compound(q-22, C-21)
punct(q-22, '-19)
punct(q-22, '-23)
punct(Pp-26, `-25)
punct(Pp-26, '-27)
auxpass(masked-29, is-28)
punct(masked-29, ,-34)
punct(masked-29, .-40)
punct(masked-29, ,-11)
punct(masked-29, ,-30)
case(case-33, in-31)
det(case-33, this-32)
case(mode-37, by-35)
case(signifying-39, of-38)
advmod(infer-3, When-1)
nsubj(infer-3, we-2)
advcl(masked-29, infer-3)
advmod(infer-3, q-4)
nmod:from(infer-3, q-8)
nmod:from(infer-3, Pp-10)
conj:and(q-8, Pp-10)
nsubjpass(masked-29, relation-13)
amod(forms-17, propositional-16)
nmod:between(relation-13, forms-17)
nmod:of(forms-17, q-22)
nmod:of(forms-17, Pp-26)
conj:and(q-22, Pp-26)
nmod:in(masked-29, case-33)
nmod:poss(mode-37, our-36)
nmod:agent(masked-29, mode-37)
nmod:of(mode-37, signifying-39)
root(ROOT-0, write-11)
mwe(instead-3, of-4)
compound(q-8, p-6)
compound(q-8, C-7)
mark(q-8, if-2)
punct(q-8, '-5)
cc(write-11, But-1)
punct(write-11, .-20)
punct(write-11, '-9)
punct(write-11, ,-12)
punct(write-11, ,-15)
punct(write-11, `-16)
case(example-14, for-13)
compound(q-19, p-17)
advmod(q-8, instead-3)
advcl:if(write-11, q-8)
nsubj(write-11, we-10)
nmod:for(write-11, example-14)
nummod(q-19, |-18)
dobj(write-11, q-19)
root(ROOT-0, |-1)
punct(|-1, .-2)
root(ROOT-0, q-3)
cc(q-3, and-6)
compound(q-3, p-1)
punct(q-3, ,-28)
punct(q-3, .-35)
punct(q-3, '-4)
punct(q-3, ,-5)
mwe(instead-7, of-8)
case(Pp-10, instead-7)
punct(Pp-10, `-9)
punct(Pp-10, '-11)
punct(Pp-10, ,-12)
punct(Pp-10, `-13)
punct(Pp-10, '-17)
compound(p-16, p-14)
compound(p-16, |-15)
compound(q-21, p-19)
punct(q-21, -RRB--27)
punct(q-21, -LRB--18)
cc(p-24, nor-25)
det(connexion-32, the-30)
nummod(q-3, |-2)
conj:and(q-3, Pp-10)
dep(Pp-10, p-16)
nummod(q-21, |-20)
dep(Pp-10, q-21)
amod(q-21, =-22)
cc:preconj(p-24, neither-23)
dep(=-22, p-24)
dep(=-22, q-26)
conj:nor(p-24, q-26)
advmod(becomes-33, then-29)
amod(connexion-32, inner-31)
nsubj(becomes-33, connexion-32)
acl:relcl(q-3, becomes-33)
xcomp(becomes-33, obvious-34)
root(ROOT-0, -LRB--1)
det(possibility-3, The-2)
punct(possibility-3, .-10)
case(inference-5, of-4)
case(x-8, from-6)
punct(x-8, -LRB--7)
punct(x-8, -RRB--9)
root(-LRB--1, possibility-3)
nmod:of(possibility-3, inference-5)
nmod:from(inference-5, x-8)
root(ROOT-0, shows-4)
case(fa-3, to-2)
punct(shows-4, .-11)
compound(x-9, symbol-7)
det(x-9, the-6)
punct(x-9, -LRB--8)
punct(x-9, -RRB--10)
nsubj(shows-4, fx-1)
nmod:to(fx-1, fa-3)
dobj(shows-4, that-5)
appos(that-5, x-9)
root(ROOT-0, has-3)
punct(has-3, .-7)
punct(has-3, -RRB--8)
case(it-6, in-5)
nsubj(has-3, fx-1)
nmod:npmod(fx-1, itself-2)
dobj(has-3, generality-4)
nmod:in(has-3, it-6)
G[43, 38] [-LRB-1, =22, ?1, ?2, ?3, ?4, ?5, ?6, C p q22, C p q8, C p q8, Pp26, Pp10, becomes33, case2147483647, connexion2147483647, example14, fa3, forms2147483647, fx1, fx1, has3, infer3, inference5, instead of3, instead of7, it6, masked29, mode37, p24, p q3, p q21, p q19, possibility2147483647, relation2147483647, shows4, signifying39, symbol x2147483647, that5, write11, x8, |1, | p p16]
?5-this->case2147483647
example14- ->fx1
?5-in : is ->masked29
that5- ->shows4
infer3- ->masked29
p q21- ->Pp10
x8-from->inference5
C p q8-from : and ->infer3
instead of3- ->C p q8
C p q8-if : But ->write11
example14-for->write11
=22- ->p q21
?6- ->-LRB-1
Pp26-and->C p q22
Pp10-and : instead of ->p q3
?2-the->connexion2147483647
fx1- ->shows4
p q19- ->write11
mode37-agent->masked29
| p p16- ->Pp10
it6-in->has3
?1- ->masked29
it6- ->fx1
?2- ->becomes33
?6-The->possibility2147483647
?1-the->relation2147483647
inference5-of->?6
?3-the->symbol x2147483647
Pp26-of->?4
becomes33-relcl->p q3
p24-  : nor ->=22
?3- ->that5
C p q22-of->?4
signifying39-of : by ->mode37
fa3-to->fx1
fx1- ->has3
?4-between->?1
?4-the->forms2147483647
------CorefChainz
CHAIN33-["fx itself" in sentence 7, "itself" in sentence 7, "it" in sentence 7]
representative mention: "fx itself" in sentence 7
CHAIN8-["we" in sentence 1, "our" in sentence 1, "we" in sentence 2]
representative mention: "we" in sentence 1
