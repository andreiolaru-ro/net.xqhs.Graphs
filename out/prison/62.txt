Inmates shall not be in another inmateâ€™s cell.
------CorefChainz
Inmates-NNS 
shall-MD 
not-RB 
be-VB 
in-IN 
another-DT 
inmate-NN 
's-POS 
cell-NN 
.-. 
ROOT 	-> S 	-> NP 	-> NNS 	-> Inmates
		 	-> VP 	-> MD 	-> shall
	 	-> RB 	-> not
	 	-> VP 	-> VB 	-> be
	 	-> PP 	-> IN 	-> in
	 	-> NP 	-> NP 	-> DT 	-> another
	 	-> NN 	-> inmate
	 	-> POS 	-> 's
		 	-> NN 	-> cell
					 	-> . 	-> .
			
Dependensee repr
nsubj(cell-9, Inmates-1)
aux(cell-9, shall-2)
neg(cell-9, not-3)
cop(cell-9, be-4)
case(cell-9, in-5)
det(inmate-7, another-6)
nmod:poss(cell-9, inmate-7)
case(inmate-7, 's-8)
root(ROOT-0, cell-9)
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, cell-9)
nsubj(cell-9, Inmates-1)
aux(cell-9, shall-2)
neg(cell-9, not-3)
cop(cell-9, be-4)
case(cell-9, in-5)
det(inmate-7, another-6)
nmod:poss(cell-9, inmate-7)
case(inmate-7, 's-8)
punct(cell-9, .-10)
---
Enhanced PLUS PLUS dependencies
---
---
G[5, 4] [?1, Inmates1, cell9, inmate7, not3]
?1-another->inmate7
?1-poss : 's ->cell9
Inmates1-  : shall  : shall ->cell9
not3-  : be  : in  : in ->cell9

[inmate7<-another-?1;
cell9
	(<-poss : 's -*?1)
	(<-  : shall  : shall -Inmates1)
	<-  : be  : in  : in -not3]
