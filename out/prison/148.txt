No inmate will be allowed to accumulate excessive amounts of jail issued hygiene products.
------CorefChainz
No-DT 
inmate-NN 
will-MD 
be-VB 
allowed-VBN 
to-TO 
accumulate-VB 
excessive-JJ 
amounts-NNS 
of-IN 
jail-NN 
issued-VBN 
hygiene-NN 
products-NNS 
.-. 
ROOT 	-> S 	-> NP 	-> DT 	-> No
	 	-> NN 	-> inmate
		 	-> VP 	-> MD 	-> will
	 	-> VP 	-> VB 	-> be
	 	-> VP 	-> VBN 	-> allowed
	 	-> S 	-> VP 	-> TO 	-> to
	 	-> VP 	-> VB 	-> accumulate
	 	-> NP 	-> NP 	-> JJ 	-> excessive
	 	-> NNS 	-> amounts
		 	-> PP 	-> IN 	-> of
	 	-> NP 	-> NP 	-> NN 	-> jail
		 	-> VP 	-> VBN 	-> issued
	 	-> NP 	-> NN 	-> hygiene
	 	-> NNS 	-> products
												 	-> . 	-> .
			
Dependensee repr
neg(inmate-2, No-1)
nsubjpass(allowed-5, inmate-2)
nsubj:xsubj(accumulate-7, inmate-2)
aux(allowed-5, will-3)
auxpass(allowed-5, be-4)
root(ROOT-0, allowed-5)
mark(accumulate-7, to-6)
xcomp(allowed-5, accumulate-7)
amod(amounts-9, excessive-8)
dobj(accumulate-7, amounts-9)
case(jail-11, of-10)
nmod:of(amounts-9, jail-11)
acl(jail-11, issued-12)
compound(products-14, hygiene-13)
dobj(issued-12, products-14)
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, allowed-5)
neg(inmate-2, No-1)
nsubjpass(allowed-5, inmate-2)
nsubj:xsubj(accumulate-7, inmate-2)
aux(allowed-5, will-3)
auxpass(allowed-5, be-4)
mark(accumulate-7, to-6)
xcomp(allowed-5, accumulate-7)
amod(amounts-9, excessive-8)
dobj(accumulate-7, amounts-9)
case(jail-11, of-10)
nmod:of(amounts-9, jail-11)
xcomp(allowed-5, issued-12)
compound(products-14, hygiene-13)
dobj(issued-12, products-14)
punct(allowed-5, .-15)
---
Enhanced PLUS PLUS dependencies
---
---
G[10, 10] [No1, accumulate7, allowed5, amounts9, excessive8, hygiene13, inmate2, issued12, jail11, products14]
amounts9- ->accumulate7
hygiene13- ->products14
accumulate7-  : to ->allowed5
inmate2- ->accumulate7
issued12- ->allowed5
jail11-of->amounts9
products14- ->issued12
excessive8- ->amounts9
inmate2-  : will  : be ->allowed5
No1- ->inmate2

[allowed5
	(<- -issued12<- -products14<- -hygiene13)
	(<-  : to -accumulate7
		(<- -inmate2<- -No1)
		<- -amounts9(<- -excessive8)<-of-jail11)
	<-  : will  : be -*inmate2]
