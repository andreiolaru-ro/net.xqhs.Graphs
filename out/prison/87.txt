There shall not be any drawings or markings on either side of the envelope.
------CorefChainz
There-EX 
shall-MD 
not-RB 
be-VB 
any-DT 
drawings-NNS 
or-CC 
markings-NNS 
on-IN 
either-DT 
side-NN 
of-IN 
the-DT 
envelope-NN 
.-. 
ROOT 	-> S 	-> NP 	-> EX 	-> There
		 	-> VP 	-> MD 	-> shall
	 	-> RB 	-> not
	 	-> VP 	-> VB 	-> be
	 	-> NP 	-> NP 	-> DT 	-> any
	 	-> NNS 	-> drawings
	 	-> CC 	-> or
	 	-> NNS 	-> markings
		 	-> PP 	-> IN 	-> on
	 	-> NP 	-> NP 	-> DT 	-> either
	 	-> NN 	-> side
		 	-> PP 	-> IN 	-> of
	 	-> NP 	-> DT 	-> the
	 	-> NN 	-> envelope
								 	-> . 	-> .
			
Dependensee repr
expl(drawings-6, There-1)
aux(drawings-6, shall-2)
neg(drawings-6, not-3)
cop(drawings-6, be-4)
det(drawings-6, any-5)
root(ROOT-0, drawings-6)
cc(drawings-6, or-7)
conj:or(drawings-6, markings-8)
case(side-11, on-9)
det(side-11, either-10)
nmod:on(drawings-6, side-11)
case(envelope-14, of-12)
det(envelope-14, the-13)
nmod:of(side-11, envelope-14)
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, drawings-6)
expl(drawings-6, There-1)
aux(drawings-6, shall-2)
neg(drawings-6, not-3)
cop(drawings-6, be-4)
det(drawings-6, any-5)
cc(drawings-6, or-7)
conj:or(drawings-6, markings-8)
case(side-11, on-9)
det(side-11, either-10)
nmod:on(drawings-6, side-11)
case(envelope-14, of-12)
det(envelope-14, the-13)
nmod:of(side-11, envelope-14)
punct(drawings-6, .-15)
---
Enhanced PLUS PLUS dependencies
---
---
G[9, 8] [?1, ?2, ?3, There1, drawings6, envelope14, markings8, not3, side11]
?1-any->drawings6
?3-the->envelope14
?2-on->?1
not3-  : be ->?1
There1-  : shall  : shall ->?1
?2-either->side11
markings8-or->?1
?3-of->?2

[drawings6<-any-?1
	(<-on-?2<-of-?3)
	(<-  : shall  : shall -There1)
	(<-or-markings8)
	<-  : be -not3;
envelope14<-the-*?3;
side11<-either-*?2]
