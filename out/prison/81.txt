We will not add any needed postage for you to your letters.
------CorefChainz
CHAIN3-["you" in sentence 1, "your" in sentence 1]
representative mention: "you" in sentence 1
We-PRP 
will-MD 
not-RB 
add-VB 
any-DT 
needed-JJ 
postage-NN 
for-IN 
you-PRP 
to-TO 
your-PRP$ 
letters-NNS 
.-. 
ROOT 	-> S 	-> NP 	-> PRP 	-> We
		 	-> VP 	-> MD 	-> will
	 	-> RB 	-> not
	 	-> VP 	-> VB 	-> add
	 	-> NP 	-> NP 	-> DT 	-> any
	 	-> JJ 	-> needed
	 	-> NN 	-> postage
		 	-> PP 	-> IN 	-> for
	 	-> NP 	-> PRP 	-> you
				 	-> PP 	-> TO 	-> to
	 	-> NP 	-> PRP$ 	-> your
	 	-> NNS 	-> letters
					 	-> . 	-> .
			
Dependensee repr
nsubj(add-4, We-1)
aux(add-4, will-2)
neg(add-4, not-3)
root(ROOT-0, add-4)
det(postage-7, any-5)
amod(postage-7, needed-6)
dobj(add-4, postage-7)
case(you-9, for-8)
nmod:for(postage-7, you-9)
case(letters-12, to-10)
nmod:poss(letters-12, your-11)
nmod:to(add-4, letters-12)
---
Enhanced PLUS PLUS dependencies
---
---
qqroot(ROOT-0, add-4)
nsubj(add-4, We-1)
aux(add-4, will-2)
neg(add-4, not-3)
det(postage-7, any-5)
amod(postage-7, needed-6)
dobj(add-4, postage-7)
case(letters-12, for-8)
dep(letters-12, you-9)
case(letters-12, to-10)
nmod:poss(letters-12, your-11)
nmod:to(postage-7, letters-12)
punct(add-4, .-13)
---
Enhanced PLUS PLUS dependencies
---
---
G[9, 9] [?1, We1, add4, letters12, needed6, not3, postage7, you9, your11]
your11-==->you9
your11-poss->letters12
needed6- ->?1
We1-  : will  : will ->add4
?1- ->add4
letters12-to : for  : for ->?1
you9- ->letters12
not3- ->add4
?1-any->postage7

[postage7<-any-?1
	(<-to : for  : for -letters12(<- -you9<-==-your11)<-poss-*your11)
	<- -needed6;
add4
	(<- -*?1)
	(<-  : will  : will -We1)
	<- -not3]
